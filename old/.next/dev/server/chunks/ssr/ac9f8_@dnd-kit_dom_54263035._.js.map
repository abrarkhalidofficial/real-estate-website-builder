{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@dnd-kit+dom@0.1.21/node_modules/@dnd-kit/dom/utilities.js","sources":["file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isKeyframeEffect.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/animations/getFinalKeyframe.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/getBoundingRectangle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/execution-context/canUseDOM.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isWindow.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isNode.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/execution-context/getWindow.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isDocument.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isHTMLElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isSVGElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/execution-context/getDocument.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/getViewportBoundingRectangle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/isOverflowVisible.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/getVisibleBoundingRectangle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/execution-context/isSafari.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/element/cloneElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/element/getElementFromPoint.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/element/proxiedElements.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/event-listeners/Listeners.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/frame/getFrameElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/frame/getFrameElements.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scheduling/timeout.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scheduling/throttle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/isRectEqual.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/bounding-rectangle/isVisible.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/observers/ResizeNotifier.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/observers/PositionObserver.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/observers/FrameObserver.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/popover/supportsPopover.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/popover/showPopover.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/popover/hidePopover.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/documentScrollingElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/getScrollPosition.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/canScroll.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scheduling/scheduler.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/styles/getComputedStyles.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/isFixed.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/isScrollable.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/getScrollableAncestors.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/frame/getFrameTransform.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/parseScale.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/parseTranslate.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/parseTransform.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/detectScrollIntent.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scroll/scrollIntoViewIfNeeded.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/applyTransform.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/inverseTransform.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/animateTransform.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/transform/computeTranslate.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/animations/forceFinishAnimations.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/shapes/DOMRectangle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/supportsStyle.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/styles/Styles.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isElement.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isKeyboardEvent.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isPointerEvent.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/supportsViewTransition.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/type-guards/isTextInput.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/misc/generateUniqueId.ts"],"sourcesContent":["export function isKeyframeEffect(\n  effect: AnimationEffect | null | undefined\n): effect is KeyframeEffect {\n  if (!effect) return false;\n\n  if (effect instanceof KeyframeEffect) return true;\n\n  return 'getKeyframes' in effect && typeof effect.getKeyframes === 'function';\n}\n","import {isKeyframeEffect} from '../type-guards/isKeyframeEffect.ts';\n\nexport function getFinalKeyframe(\n  element: Element,\n  match: (keyframe: Keyframe) => boolean\n): [Keyframe, Animation] | null {\n  const animations = element.getAnimations();\n\n  if (animations.length > 0) {\n    for (const animation of animations) {\n      if (animation.playState !== 'running') continue;\n      const {effect} = animation;\n      const keyframes = isKeyframeEffect(effect) ? effect.getKeyframes() : [];\n      const matchedKeyframes = keyframes.filter(match);\n\n      if (matchedKeyframes.length > 0) {\n        return [matchedKeyframes[matchedKeyframes.length - 1], animation];\n      }\n    }\n  }\n\n  return null;\n}\n","import {BoundingRectangle} from '@dnd-kit/geometry';\n\nexport function getBoundingRectangle(element: Element): BoundingRectangle {\n  const {width, height, top, left, bottom, right} =\n    element.getBoundingClientRect();\n\n  return {width, height, top, left, bottom, right};\n}\n","// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n","export function isWindow(element: Object): element is typeof window {\n  const elementString = Object.prototype.toString.call(element);\n  return (\n    elementString === '[object Window]' ||\n    // In Electron context the Window object serializes to [object global]\n    elementString === '[object global]'\n  );\n}\n","export function isNode(node: Object): node is Node {\n  return 'nodeType' in node;\n}\n","import {isWindow} from '../type-guards/isWindow.ts';\nimport {isNode} from '../type-guards/isNode.ts';\n\nexport function getWindow(\n  target: Event['target'] | null | undefined\n): typeof window {\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  if ('defaultView' in target) {\n    return (target.defaultView as typeof window | null) ?? window;\n  }\n\n  return target.ownerDocument?.defaultView ?? window;\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\n\nexport function isDocument(node: Node): node is Document {\n  const {Document} = getWindow(node);\n\n  return (\n    node instanceof Document ||\n    ('nodeType' in node && node.nodeType === Node.DOCUMENT_NODE)\n  );\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\n\nimport {isWindow} from './isWindow.ts';\n\nexport function isHTMLElement(\n  node: Node | Window | null | undefined\n): node is HTMLElement {\n  if (!node || isWindow(node)) return false;\n\n  return (\n    node instanceof getWindow(node).HTMLElement ||\n    ('namespaceURI' in node &&\n      typeof node.namespaceURI === 'string' &&\n      node.namespaceURI.endsWith('html'))\n  );\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\n\nexport function isSVGElement(node: Node): node is SVGElement {\n  return (\n    node instanceof getWindow(node).SVGElement ||\n    ('namespaceURI' in node &&\n      typeof node.namespaceURI === 'string' &&\n      node.namespaceURI.endsWith('svg'))\n  );\n}\n","import {isDocument} from '../type-guards/isDocument.ts';\nimport {isHTMLElement} from '../type-guards/isHTMLElement.ts';\nimport {isNode} from '../type-guards/isNode.ts';\nimport {isSVGElement} from '../type-guards/isSVGElement.ts';\nimport {isWindow} from '../type-guards/isWindow.ts';\n\nexport function getDocument(target: Event['target'] | undefined): Document {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target) || isSVGElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n","import type {BoundingRectangle} from '@dnd-kit/geometry';\n\nimport {getDocument} from '../execution-context/index.ts';\n\n/**\n * Returns the bounding rectangle of the viewport\n * @param element\n * @returns BoundingRectangle\n */\nexport function getViewportBoundingRectangle(\n  element: Element\n): BoundingRectangle {\n  const {documentElement} = getDocument(element);\n  const width = documentElement.clientWidth;\n  const height = documentElement.clientHeight;\n\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  };\n}\n","/*\n * Check if an element has visible overflow.\n * @param element\n * @param style\n * @returns boolean\n */\nexport function isOverflowVisible(\n  element: Element,\n  style?: CSSStyleDeclaration\n) {\n  if (isDetailsElement(element) && element.open === false) {\n    return false;\n  }\n\n  const {overflow, overflowX, overflowY} = style ?? getComputedStyle(element);\n\n  return (\n    overflow === 'visible' && overflowX === 'visible' && overflowY === 'visible'\n  );\n}\n\nfunction isDetailsElement(element: Element): element is HTMLDetailsElement {\n  return element.tagName === 'DETAILS';\n}\n","import type {BoundingRectangle} from '@dnd-kit/geometry';\n\nimport {isOverflowVisible} from './isOverflowVisible.ts';\n\n/*\n * Get the currently visible bounding rectangle of an element\n * @param element\n * @param boundingClientRect\n * @returns Rect\n */\nexport function getVisibleBoundingRectangle(\n  element: Element,\n  boundingClientRect = element.getBoundingClientRect(),\n  margin = 0\n): BoundingRectangle {\n  // Get the initial bounding client rect of the element\n  let rect: BoundingRectangle = boundingClientRect;\n  const {ownerDocument} = element;\n  const ownerWindow = ownerDocument.defaultView ?? window;\n\n  // Traverse up the DOM tree to clip the rect based on ancestors' bounding rects\n  let ancestor: HTMLElement | null = element.parentElement;\n\n  while (ancestor && ancestor !== ownerDocument.documentElement) {\n    if (!isOverflowVisible(ancestor)) {\n      const ancestorRect = ancestor.getBoundingClientRect();\n\n      const marginTop = margin * (ancestorRect.bottom - ancestorRect.top);\n      const marginRight = margin * (ancestorRect.right - ancestorRect.left);\n      const marginBottom = margin * (ancestorRect.bottom - ancestorRect.top);\n      const marginLeft = margin * (ancestorRect.right - ancestorRect.left);\n\n      // Clip the rect based on the ancestor's bounding rect\n      rect = {\n        top: Math.max(rect.top, ancestorRect.top - marginTop),\n        right: Math.min(rect.right, ancestorRect.right + marginRight),\n        bottom: Math.min(rect.bottom, ancestorRect.bottom + marginBottom),\n        left: Math.max(rect.left, ancestorRect.left - marginLeft),\n        width: 0, // Will be calculated next\n        height: 0, // Will be calculated next\n      };\n\n      // Calculate the width and height after clipping\n      rect.width = rect.right - rect.left;\n      rect.height = rect.bottom - rect.top;\n    }\n\n    // Move to the next ancestor\n    ancestor = ancestor.parentElement;\n  }\n\n  // Clip the rect based on the viewport (window)\n  const viewportWidth = ownerWindow.innerWidth;\n  const viewportHeight = ownerWindow.innerHeight;\n  const viewportMarginY = margin * viewportHeight;\n  const viewportMarginX = margin * viewportWidth;\n\n  rect = {\n    top: Math.max(rect.top, 0 - viewportMarginY),\n    right: Math.min(rect.right, viewportWidth + viewportMarginX),\n    bottom: Math.min(rect.bottom, viewportHeight + viewportMarginY),\n    left: Math.max(rect.left, 0 - viewportMarginX),\n    width: 0, // Will be calculated next\n    height: 0, // Will be calculated next\n  };\n\n  // Calculate the width and height after clipping\n  rect.width = rect.right - rect.left;\n  rect.height = rect.bottom - rect.top;\n\n  if (rect.width < 0) {\n    rect.width = 0;\n  }\n\n  if (rect.height < 0) {\n    rect.height = 0;\n  }\n\n  return rect;\n}\n","export function isSafari() {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\n","export function cloneElement(element: Element): Element {\n  const selector = 'input, textarea, select, canvas, [contenteditable]';\n  const clonedElement = element.cloneNode(true) as HTMLElement;\n  const fields = Array.from(element.querySelectorAll(selector));\n  const clonedFields = Array.from(clonedElement.querySelectorAll(selector));\n\n  clonedFields.forEach((field, index) => {\n    const originalField = fields[index];\n\n    if (isField(field) && isField(originalField)) {\n      if (field.type !== 'file') {\n        field.value = originalField.value;\n      }\n\n      // Fixes an issue with original radio buttons losing their value once the\n      // clone is inserted in the DOM, as radio button `name` attributes must be unique\n      if (field.type === 'radio' && field.name) {\n        field.name = `Cloned__${field.name}`;\n      }\n    }\n\n    if (\n      isCanvasElement(field) &&\n      isCanvasElement(originalField) &&\n      originalField.width > 0 &&\n      originalField.height > 0\n    ) {\n      const destCtx = field.getContext('2d');\n      destCtx?.drawImage(originalField, 0, 0);\n    }\n  });\n\n  return clonedElement;\n}\n\nfunction isField(\n  element: Element\n): element is HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement {\n  return 'value' in element;\n}\n\nfunction isCanvasElement(element: Element): element is HTMLCanvasElement {\n  return element.tagName === 'CANVAS';\n}\n","import type {Coordinates} from '@dnd-kit/geometry';\n\nexport function getElementFromPoint(\n  document: Document,\n  {x, y}: Coordinates\n): Element | null {\n  const element = document.elementFromPoint(x, y);\n\n  if (isIFrameElement(element)) {\n    const {contentDocument} = element;\n\n    if (contentDocument) {\n      const {left, top} = element.getBoundingClientRect();\n\n      return getElementFromPoint(contentDocument, {\n        x: x - left,\n        y: y - top,\n      });\n    }\n  }\n\n  return element;\n}\n\nfunction isIFrameElement(\n  element: Element | null\n): element is HTMLIFrameElement {\n  return element?.tagName === 'IFRAME';\n}\n","export const ProxiedElements = new WeakMap<Element, Element>();\n","export interface EventListenerDescriptor {\n  type: string;\n  listener(event: Event): void;\n  options?: AddEventListenerOptions;\n}\n\ntype EventListenerInput = EventListenerDescriptor[] | EventListenerDescriptor;\n\ntype EventListenerEntry = [EventTarget, EventListenerDescriptor];\n\nexport class Listeners {\n  private entries: Set<EventListenerEntry> = new Set();\n\n  constructor() {}\n\n  public bind(target: EventTarget, input: EventListenerInput) {\n    const listeners = Array.isArray(input) ? input : [input];\n    const entries: EventListenerEntry[] = [];\n\n    for (const descriptor of listeners) {\n      const {type, listener, options} = descriptor;\n      const entry: EventListenerEntry = [target, descriptor];\n\n      target.addEventListener(type, listener, options);\n      this.entries.add(entry);\n      entries.push(entry);\n    }\n\n    return function cleanup() {\n      for (const [target, {type, listener, options}] of entries) {\n        target.removeEventListener(type, listener, options);\n      }\n    };\n  }\n\n  public clear = () => {\n    for (const entry of this.entries) {\n      const [target, {type, listener, options}] = entry;\n\n      target.removeEventListener(type, listener, options);\n    }\n\n    this.entries.clear();\n  };\n}\n","export function getFrameElement(el: Element | undefined) {\n  const refWindow = el?.ownerDocument.defaultView;\n\n  if (refWindow && refWindow.self !== refWindow.parent) {\n    return refWindow.frameElement;\n  }\n}\n","import {getFrameElement} from './getFrameElement.ts';\n\nexport function getFrameElements(el: Element | undefined) {\n  const frames = new Set<Element>();\n  let frame = getFrameElement(el);\n\n  while (frame) {\n    frames.add(frame);\n    frame = getFrameElement(frame);\n  }\n\n  return frames;\n}\n","export function timeout(callback: () => void, duration: number): () => void {\n  const id = setTimeout(callback, duration);\n\n  return () => clearTimeout(id);\n}\n","import {timeout} from './timeout.ts';\n\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  const time = () => performance.now();\n  let cancel: () => void | undefined;\n  let lastRan: number;\n\n  return function (this: any, ...args: Parameters<T>) {\n    const context = this;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = time();\n    } else {\n      cancel?.();\n      cancel = timeout(\n        () => {\n          func.apply(context, args);\n          lastRan = time();\n        },\n        limit - (time() - lastRan)\n      );\n    }\n  };\n}\n","import type {BoundingRectangle} from '@dnd-kit/geometry';\n\nexport function isRectEqual(\n  a: BoundingRectangle | undefined,\n  b: BoundingRectangle | undefined\n) {\n  if (a === b) return true;\n  if (!a || !b) return false;\n\n  return (\n    a.top == b.top &&\n    a.left == b.left &&\n    a.right == b.right &&\n    a.bottom == b.bottom\n  );\n}\n","import {getVisibleBoundingRectangle} from './getVisibleBoundingRectangle.ts';\n\nexport function isVisible(\n  element: Element,\n  boundingClientRect = element.getBoundingClientRect()\n): boolean {\n  const {width, height} = getVisibleBoundingRectangle(\n    element,\n    boundingClientRect\n  );\n\n  return width > 0 && height > 0;\n}\n","import {canUseDOM} from '../execution-context/canUseDOM.ts';\n\nconst Observer = canUseDOM\n  ? ResizeObserver\n  : class MockResizeObserver implements ResizeObserver {\n      observe() {}\n      unobserve() {}\n      disconnect() {}\n    };\n\nexport class ResizeNotifier extends Observer {\n  #initialized = false;\n\n  constructor(callback: ResizeObserverCallback) {\n    super((entries) => {\n      if (!this.#initialized) {\n        this.#initialized = true;\n        return;\n      }\n      callback(entries, this);\n    });\n  }\n}\n","import {BoundingRectangle, Rectangle} from '@dnd-kit/geometry';\n\nimport {throttle} from '../scheduling/throttle.ts';\n\nimport {isRectEqual} from '../bounding-rectangle/isRectEqual.ts';\nimport {isVisible} from '../bounding-rectangle/isVisible.ts';\nimport {getVisibleBoundingRectangle} from '../bounding-rectangle/getVisibleBoundingRectangle.ts';\n\nimport {ResizeNotifier} from './ResizeNotifier.ts';\n\nexport type PositionObserverCallback = (\n  boundingClientRect: BoundingRectangle | null\n) => void;\n\nconst threshold = Array.from({length: 100}, (_, index) => index / 100);\nexport const THROTTLE_INTERVAL = 75;\n\nexport class PositionObserver {\n  constructor(\n    public element: Element,\n    public callback: PositionObserverCallback,\n    options: {debug?: boolean; skipInitial?: boolean} = {\n      debug: false,\n      skipInitial: false,\n    }\n  ) {\n    this.boundingClientRect = element.getBoundingClientRect();\n    this.#visible = isVisible(element, this.boundingClientRect);\n\n    let initial = true;\n    this.callback = (boundingClientRect) => {\n      if (initial) {\n        initial = false;\n        if (options.skipInitial) return;\n      }\n\n      callback(boundingClientRect);\n    };\n\n    const root = element.ownerDocument;\n\n    if (options?.debug) {\n      this.#debug = document.createElement('div');\n      this.#debug.style.background = 'rgba(0,0,0,0.15)';\n      this.#debug.style.position = 'fixed';\n      this.#debug.style.pointerEvents = 'none';\n      root.body.appendChild(this.#debug);\n    }\n\n    this.#visibilityObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        const entry = entries[entries.length - 1];\n        const {boundingClientRect, isIntersecting: visible} = entry;\n        const {width, height} = boundingClientRect;\n        const previousVisible = this.#visible;\n\n        this.#visible = visible;\n\n        if (!width && !height) return;\n\n        if (previousVisible && !visible) {\n          this.#positionObserver?.disconnect();\n          this.callback(null);\n          this.#resizeObserver?.disconnect();\n          this.#resizeObserver = undefined;\n\n          if (this.#debug) this.#debug.style.visibility = 'hidden';\n        } else {\n          this.#observePosition();\n        }\n\n        if (visible && !this.#resizeObserver) {\n          this.#resizeObserver = new ResizeNotifier(this.#observePosition);\n          this.#resizeObserver.observe(element);\n        }\n      },\n      {\n        threshold,\n        root,\n      }\n    );\n\n    if (this.#visible && !options.skipInitial) {\n      this.callback(this.boundingClientRect);\n    }\n\n    this.#visibilityObserver.observe(element);\n  }\n\n  public boundingClientRect: DOMRectReadOnly;\n\n  public disconnect = () => {\n    this.#disconnected = true;\n    this.#resizeObserver?.disconnect();\n    this.#positionObserver?.disconnect();\n    this.#visibilityObserver.disconnect();\n    this.#debug?.remove();\n  };\n\n  #visible = true;\n  #previousBoundingClientRect: DOMRectReadOnly | undefined;\n  #resizeObserver: ResizeNotifier | undefined;\n  #positionObserver: IntersectionObserver | undefined;\n  #visibilityObserver: IntersectionObserver;\n  #debug: HTMLElement | undefined;\n  #disconnected = false;\n\n  #observePosition = throttle(() => {\n    const {element} = this;\n\n    this.#positionObserver?.disconnect();\n\n    if (this.#disconnected || !this.#visible || !element.isConnected) {\n      return;\n    }\n\n    const root = element.ownerDocument ?? document;\n    const {innerHeight, innerWidth} = root.defaultView ?? window;\n    const clientRect = element.getBoundingClientRect();\n    const visibleRect = getVisibleBoundingRectangle(element, clientRect);\n    const {top, left, bottom, right} = visibleRect;\n    const insetTop = -Math.floor(top);\n    const insetLeft = -Math.floor(left);\n    const insetRight = -Math.floor(innerWidth - right);\n    const insetBottom = -Math.floor(innerHeight - bottom);\n    const rootMargin = `${insetTop}px ${insetRight}px ${insetBottom}px ${insetLeft}px`;\n\n    this.boundingClientRect = clientRect;\n    this.#positionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        const [entry] = entries;\n        const {intersectionRect} = entry;\n        /*\n         * The intersection ratio returned by the intersection observer entry\n         * represents the ratio of the intersectionRect to the boundingClientRect,\n         * which is not what we want. We want the ratio of the intersectionRect\n         * to the rootBounds (visible rect).\n         */\n        const intersectionRatio =\n          entry.intersectionRatio !== 1\n            ? entry.intersectionRatio\n            : Rectangle.intersectionRatio(\n                intersectionRect,\n                getVisibleBoundingRectangle(element)\n              );\n\n        if (intersectionRatio !== 1) {\n          this.#observePosition();\n        }\n      },\n      {\n        threshold,\n        rootMargin,\n        root,\n      }\n    );\n\n    this.#positionObserver.observe(element);\n    this.#notify();\n  }, THROTTLE_INTERVAL);\n\n  #notify() {\n    if (this.#disconnected) return;\n\n    this.#updateDebug();\n\n    if (isRectEqual(this.boundingClientRect, this.#previousBoundingClientRect))\n      return;\n\n    this.callback(this.boundingClientRect);\n    this.#previousBoundingClientRect = this.boundingClientRect;\n  }\n\n  #updateDebug() {\n    if (this.#debug) {\n      const {top, left, width, height} = getVisibleBoundingRectangle(\n        this.element\n      );\n\n      this.#debug.style.overflow = 'hidden';\n      this.#debug.style.visibility = 'visible';\n      this.#debug.style.top = `${Math.floor(top)}px`;\n      this.#debug.style.left = `${Math.floor(left)}px`;\n      this.#debug.style.width = `${Math.floor(width)}px`;\n      this.#debug.style.height = `${Math.floor(height)}px`;\n    }\n  }\n}\n","import {getFrameElements} from '../frame/getFrameElements.ts';\nimport {throttle} from '../scheduling/throttle.ts';\nimport {\n  PositionObserver,\n  THROTTLE_INTERVAL,\n  type PositionObserverCallback,\n} from './PositionObserver.ts';\n\nconst framePositionObservers = new WeakMap<\n  Element,\n  {\n    disconnect: () => void;\n    callbacks: Set<PositionObserverCallback>;\n  }\n>();\n\nconst scrollListeners = new WeakMap<\n  Document,\n  {\n    disconnect: () => void;\n    listeners: Set<EventListener>;\n  }\n>();\n\nfunction addFrameListener(frame: Element, callback: PositionObserverCallback) {\n  // Check if already observed globally\n  let cached = framePositionObservers.get(frame);\n\n  if (!cached) {\n    const observer = new PositionObserver(\n      frame,\n      (boundingClientRect) => {\n        const cached = framePositionObservers.get(frame);\n        if (!cached) return;\n\n        cached.callbacks.forEach((callback) => callback(boundingClientRect));\n      },\n      {skipInitial: true}\n    );\n\n    cached = {disconnect: observer.disconnect, callbacks: new Set()};\n  }\n\n  cached.callbacks.add(callback);\n  framePositionObservers.set(frame, cached);\n\n  return () => {\n    cached.callbacks.delete(callback);\n\n    if (cached.callbacks.size === 0) {\n      framePositionObservers.delete(frame);\n      cached.disconnect();\n    }\n  };\n}\n\nfunction observeParentFrames(\n  frames: Set<Element>,\n  callback: PositionObserverCallback\n) {\n  const cleanup = new Set<() => void>();\n\n  for (const frame of frames) {\n    const remove = addFrameListener(frame, callback);\n    cleanup.add(remove);\n  }\n\n  return () => cleanup.forEach((remove) => remove());\n}\n\nfunction addScrollListener(element: Element, callback: EventListener) {\n  const doc = element.ownerDocument;\n\n  if (!scrollListeners.has(doc)) {\n    const controller = new AbortController();\n    const listeners = new Set<EventListener>();\n\n    document.addEventListener(\n      'scroll',\n      (event) => listeners.forEach((listener) => listener(event)),\n      {\n        capture: true,\n        passive: true,\n        signal: controller.signal,\n      }\n    );\n\n    scrollListeners.set(doc, {disconnect: () => controller.abort(), listeners});\n  }\n\n  const {listeners, disconnect} = scrollListeners.get(doc) ?? {};\n\n  if (!listeners || !disconnect) return () => {};\n\n  listeners.add(callback);\n\n  return () => {\n    listeners.delete(callback);\n\n    if (listeners.size === 0) {\n      disconnect();\n      scrollListeners.delete(doc);\n    }\n  };\n}\n\nexport class FrameObserver {\n  #elementObserver: PositionObserver;\n  #disconnected = false;\n  #frames: Set<Element>;\n\n  constructor(\n    element: Element,\n    private callback: PositionObserverCallback,\n    options?: {debug?: boolean}\n  ) {\n    const frames = getFrameElements(element);\n    const unobserveParentFrames = observeParentFrames(frames, callback);\n    const removeScrollListener = addScrollListener(element, this.#handleScroll);\n\n    this.#frames = frames;\n    this.#elementObserver = new PositionObserver(element, callback, options);\n    this.disconnect = () => {\n      if (this.#disconnected) return;\n      this.#disconnected = true;\n\n      unobserveParentFrames();\n      removeScrollListener();\n      this.#elementObserver.disconnect();\n    };\n  }\n\n  disconnect: () => void;\n\n  #handleScroll = throttle((event: Event) => {\n    if (this.#disconnected) return;\n    if (!event.target) return;\n    if (\n      'contains' in event.target &&\n      typeof event.target.contains === 'function'\n    ) {\n      for (const frame of this.#frames) {\n        if (event.target.contains(frame)) {\n          this.callback(this.#elementObserver.boundingClientRect);\n          break;\n        }\n      }\n    }\n  }, THROTTLE_INTERVAL);\n}\n","export function supportsPopover(element: Element): element is Element & {\n  showPopover(): void;\n  hidePopover(): void;\n} {\n  return (\n    'showPopover' in element &&\n    'hidePopover' in element &&\n    typeof element.showPopover === 'function' &&\n    typeof element.hidePopover === 'function'\n  );\n}\n","import {supportsPopover} from './supportsPopover.ts';\n\nexport function showPopover(element: Element) {\n  try {\n    if (\n      supportsPopover(element) &&\n      element.isConnected &&\n      element.hasAttribute('popover') &&\n      // This selector can throw an error in browsers that don't support it\n      !element.matches(':popover-open')\n    ) {\n      element.showPopover();\n    }\n  } catch (error) {\n    // no-op\n  }\n}\n","import {supportsPopover} from './supportsPopover.ts';\n\nexport function hidePopover(element: Element) {\n  try {\n    if (\n      supportsPopover(element) &&\n      element.isConnected &&\n      element.hasAttribute('popover') &&\n      // This selector can throw an error in browsers that don't support it\n      element.matches(':popover-open')\n    ) {\n      element.hidePopover();\n    }\n  } catch (error) {\n    // no-op\n  }\n}\n","import {canUseDOM} from '../execution-context/canUseDOM.ts';\nimport {getDocument} from '../execution-context/getDocument.ts';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === getDocument(element).scrollingElement;\n}\n","import {getBoundingRectangle} from '../bounding-rectangle/getBoundingRectangle.ts';\nimport {getViewportBoundingRectangle} from '../bounding-rectangle/getViewportBoundingRectangle.ts';\nimport {getWindow} from '../execution-context/getWindow.ts';\nimport {isDocumentScrollingElement} from './documentScrollingElement.ts';\n\nexport function getScrollPosition(scrollableElement: Element) {\n  const window = getWindow(scrollableElement);\n  const rect = isDocumentScrollingElement(scrollableElement)\n    ? getViewportBoundingRectangle(scrollableElement)\n    : getBoundingRectangle(scrollableElement);\n\n  const dimensions = isDocumentScrollingElement(scrollableElement)\n    ? {\n        height: window.innerHeight,\n        width: window.innerWidth,\n      }\n    : {\n        height: scrollableElement.clientHeight,\n        width: scrollableElement.clientWidth,\n      };\n  const position = {\n    current: {\n      x: scrollableElement.scrollLeft,\n      y: scrollableElement.scrollTop,\n    },\n    max: {\n      x: scrollableElement.scrollWidth - dimensions.width,\n      y: scrollableElement.scrollHeight - dimensions.height,\n    },\n  };\n\n  const isTop = position.current.y <= 0;\n  const isLeft = position.current.x <= 0;\n  const isBottom = position.current.y >= position.max.y;\n  const isRight = position.current.x >= position.max.x;\n\n  return {\n    rect,\n    position,\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n  };\n}\n","import type {Coordinates} from '@dnd-kit/geometry';\n\nimport {getScrollPosition} from './getScrollPosition.ts';\n\nexport function canScroll(scrollableElement: Element, by?: Coordinates) {\n  const {isTop, isBottom, isLeft, isRight, position} =\n    getScrollPosition(scrollableElement);\n\n  const {x, y} = by ?? {x: 0, y: 0};\n\n  const top = !isTop && position.current.y + y > 0;\n  const bottom = !isBottom && position.current.y + y < position.max.y;\n  const left = !isLeft && position.current.x + x > 0;\n  const right = !isRight && position.current.x + x < position.max.x;\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    x: left || right,\n    y: top || bottom,\n  };\n}\n","type Callback = () => void;\n\nexport class Scheduler<T extends (callback: Callback) => any> {\n  constructor(private scheduler: T) {}\n\n  private pending: boolean = false;\n  private tasks: Set<() => void> = new Set();\n  private resolvers: Set<() => void> = new Set();\n\n  public schedule(task: () => void): Promise<void> {\n    this.tasks.add(task);\n\n    if (!this.pending) {\n      this.pending = true;\n      this.scheduler(this.flush);\n    }\n\n    return new Promise<void>((resolve) => this.resolvers.add(resolve));\n  }\n\n  public flush = () => {\n    const {tasks, resolvers} = this;\n\n    this.pending = false;\n    this.tasks = new Set();\n    this.resolvers = new Set();\n\n    for (const task of tasks) {\n      task();\n    }\n\n    for (const resolve of resolvers) {\n      resolve();\n    }\n  };\n}\n\nexport const scheduler = new Scheduler((callback) => {\n  if (typeof requestAnimationFrame === 'function') {\n    requestAnimationFrame(callback);\n  } else {\n    callback();\n  }\n});\n","import {getWindow} from '../execution-context/getWindow.ts';\nimport {Scheduler} from '../scheduling/scheduler.ts';\n\nconst scheduler = new Scheduler((callback) => setTimeout(callback, 50));\nconst cachedStyles = new Map<Element, CSSStyleDeclaration>();\nconst clear = cachedStyles.clear.bind(cachedStyles);\n\n/**\n * Get the computed styles for an element.\n * @param element - The element to get the computed styles for.\n * @param cached - Whether to cache the computed styles.\n * @returns The computed styles for the element.\n */\nexport function getComputedStyles(\n  element: Element,\n  cached = false\n): CSSStyleDeclaration {\n  if (!cached) return computeStyles(element);\n\n  let styles = cachedStyles.get(element);\n\n  if (styles) return styles;\n\n  styles = computeStyles(element);\n  cachedStyles.set(element, styles);\n  scheduler.schedule(clear);\n\n  return styles;\n}\n\nfunction computeStyles(element: Element): CSSStyleDeclaration {\n  return getWindow(element).getComputedStyle(element);\n}\n","import {getComputedStyles} from '../styles/getComputedStyles.ts';\n\nexport function isFixed(\n  node: Element,\n  computedStyle: CSSStyleDeclaration = getComputedStyles(node, true)\n): boolean {\n  return (\n    computedStyle.position === 'fixed' || computedStyle.position === 'sticky'\n  );\n}\n","import {getComputedStyles} from '../styles/getComputedStyles.ts';\n\nexport function isScrollable(\n  element: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getComputedStyles(element, true)\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return properties.some((property) => {\n    const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  });\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\nimport {isDocument} from '../type-guards/isDocument.ts';\nimport {isHTMLElement} from '../type-guards/isHTMLElement.ts';\nimport {isSVGElement} from '../type-guards/isSVGElement.ts';\nimport {getComputedStyles} from '../styles/getComputedStyles.ts';\nimport {isFixed} from './isFixed.ts';\nimport {isScrollable} from './isScrollable.ts';\n\ninterface Options {\n  limit?: number;\n  excludeElement?: boolean;\n}\n\nconst defaultOptions: Options = {\n  excludeElement: true,\n};\n\nexport function getScrollableAncestors(\n  element: Node | null,\n  options: Options = defaultOptions\n): Set<Element> {\n  const {limit, excludeElement} = options;\n  const scrollParents = new Set<Element>();\n\n  function findScrollableAncestors(node: Node | null): Set<Element> {\n    if (limit != null && scrollParents.size >= limit) {\n      return scrollParents;\n    }\n\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.has(node.scrollingElement)\n    ) {\n      scrollParents.add(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node)) {\n      if (isSVGElement(node)) {\n        return findScrollableAncestors(node.parentElement);\n      }\n\n      return scrollParents;\n    }\n\n    if (scrollParents.has(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = getComputedStyles(node, true);\n\n    if (excludeElement && node === element) {\n      // no-op\n    } else if (isScrollable(node, computedStyle)) {\n      scrollParents.add(node);\n    }\n\n    if (isFixed(node, computedStyle)) {\n      const {scrollingElement} = node.ownerDocument;\n\n      if (scrollingElement) scrollParents.add(scrollingElement);\n\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n\nexport function getFirstScrollableAncestor(node: Node | null): Element | null {\n  const [firstScrollableAncestor] = getScrollableAncestors(node, {limit: 1});\n\n  return firstScrollableAncestor ?? null;\n}\n","import {getComputedStyles} from '../styles/getComputedStyles.ts';\nimport {isHTMLElement} from '../type-guards/isHTMLElement.ts';\nimport type {Transform} from '../transform/index.ts';\n\nimport {getFrameElement} from './getFrameElement.ts';\nimport {getBoundingRectangle} from '../bounding-rectangle/getBoundingRectangle.ts';\n\nexport function getFrameTransform(\n  el: Element | undefined,\n  boundary: Element | null = window.frameElement\n): Transform {\n  const transform: Transform = {\n    x: 0,\n    y: 0,\n    scaleX: 1,\n    scaleY: 1,\n  };\n\n  if (!el) return transform;\n\n  let frame = getFrameElement(el);\n\n  while (frame) {\n    if (frame === boundary) {\n      return transform;\n    }\n\n    const rect = getBoundingRectangle(frame);\n    const {x: scaleX, y: scaleY} = getScale(frame, rect);\n\n    transform.x = transform.x + rect.left;\n    transform.y = transform.y + rect.top;\n    transform.scaleX = transform.scaleX * scaleX;\n    transform.scaleY = transform.scaleY * scaleY;\n\n    frame = getFrameElement(frame);\n  }\n\n  return transform;\n}\n\nfunction getScale(\n  element: Element,\n  boundingRectangle = getBoundingRectangle(element)\n) {\n  const width = Math.round(boundingRectangle.width);\n  const height = Math.round(boundingRectangle.height);\n\n  if (isHTMLElement(element)) {\n    return {\n      x: width / element.offsetWidth,\n      y: height / element.offsetHeight,\n    };\n  }\n\n  const styles = getComputedStyles(element, true);\n\n  return {\n    x: (parseFloat(styles.width) || width) / width,\n    y: (parseFloat(styles.height) || height) / height,\n  };\n}\n","export function parseScale(scale: string) {\n  if (scale === 'none') {\n    return null;\n  }\n\n  const values = scale.split(' ');\n  const x = parseFloat(values[0]);\n  const y = parseFloat(values[1]);\n\n  if (isNaN(x) && isNaN(y)) {\n    return null;\n  }\n\n  return {\n    x: isNaN(x) ? y : x,\n    y: isNaN(y) ? x : y,\n  };\n}\n","export function parseTranslate(translate: string) {\n  if (translate === 'none') {\n    return null;\n  }\n\n  const [x, y, z = '0'] = translate.split(' ');\n  const output = {x: parseFloat(x), y: parseFloat(y), z: parseInt(z, 10)};\n\n  if (isNaN(output.x) && isNaN(output.y)) {\n    return null;\n  }\n\n  return {\n    x: isNaN(output.x) ? 0 : output.x,\n    y: isNaN(output.y) ? 0 : output.y,\n    z: isNaN(output.z) ? 0 : output.z,\n  };\n}\n","import type {Coordinates} from '@dnd-kit/geometry';\n\nimport {parseScale} from './parseScale.ts';\nimport {parseTranslate} from './parseTranslate.ts';\n\nexport interface Transform extends Coordinates {\n  z?: number;\n  scaleX: number;\n  scaleY: number;\n}\n\nexport function parseTransform(computedStyles: {\n  scale: string;\n  transform: string;\n  translate: string;\n}): Transform | null {\n  const {scale, transform, translate} = computedStyles;\n  const parsedScale = parseScale(scale);\n  const parsedTranslate = parseTranslate(translate);\n  const parsedMatrix = parseTransformMatrix(transform);\n\n  if (!parsedMatrix && !parsedScale && !parsedTranslate) {\n    return null;\n  }\n\n  const normalizedScale = {\n    x: parsedScale?.x ?? 1,\n    y: parsedScale?.y ?? 1,\n  };\n\n  const normalizedTranslate = {\n    x: parsedTranslate?.x ?? 0,\n    y: parsedTranslate?.y ?? 0,\n  };\n\n  const normalizedMatrix = {\n    x: parsedMatrix?.x ?? 0,\n    y: parsedMatrix?.y ?? 0,\n    scaleX: parsedMatrix?.scaleX ?? 1,\n    scaleY: parsedMatrix?.scaleY ?? 1,\n  };\n\n  return {\n    x: normalizedTranslate.x + normalizedMatrix.x,\n    y: normalizedTranslate.y + normalizedMatrix.y,\n    z: parsedTranslate?.z ?? 0,\n    scaleX: normalizedScale.x * normalizedMatrix.scaleX,\n    scaleY: normalizedScale.y * normalizedMatrix.scaleY,\n  };\n}\n\nfunction parseTransformMatrix(transform: string) {\n  if (transform.startsWith('matrix3d(')) {\n    const transformArray = transform.slice(9, -1).split(/, /);\n\n    return {\n      x: +transformArray[12],\n      y: +transformArray[13],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[5],\n    };\n  } else if (transform.startsWith('matrix(')) {\n    const transformArray = transform.slice(7, -1).split(/, /);\n\n    return {\n      x: +transformArray[4],\n      y: +transformArray[5],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[3],\n    };\n  }\n\n  return null;\n}\n","import {Rectangle, type Axis, type Coordinates} from '@dnd-kit/geometry';\n\nimport {getScrollPosition} from './getScrollPosition.ts';\nimport {getFrameTransform} from '../frame/getFrameTransform.ts';\nimport {getComputedStyles} from '../styles/getComputedStyles.ts';\nimport {parseTransform} from '../transform/parseTransform.ts';\n\nexport enum ScrollDirection {\n  Idle = 0,\n  Forward = 1,\n  Reverse = -1,\n}\n\nconst defaultThreshold: Record<Axis, number> = {\n  x: 0.2,\n  y: 0.2,\n};\n\nconst defaultTolerance: Record<Axis, number> = {\n  x: 10,\n  y: 10,\n};\n\ninterface ScrollIntent {\n  x: ScrollDirection;\n  y: ScrollDirection;\n}\n\nexport function detectScrollIntent(\n  scrollableElement: Element,\n  coordinates: Coordinates,\n  intent?: ScrollIntent,\n  acceleration = 25,\n  thresholdPercentage = defaultThreshold,\n  tolerance = defaultTolerance\n) {\n  const {x, y} = coordinates;\n  const {rect, isTop, isBottom, isLeft, isRight} =\n    getScrollPosition(scrollableElement);\n  const frameTransform = getFrameTransform(scrollableElement);\n  const computedStyles = getComputedStyles(scrollableElement, true);\n  const parsedTransform = parseTransform(computedStyles);\n  const isXAxisInverted =\n    parsedTransform !== null ? parsedTransform?.scaleX < 0 : false;\n  const isYAxisInverted =\n    parsedTransform !== null ? parsedTransform?.scaleY < 0 : false;\n  const scrollContainerRect = new Rectangle(\n    rect.left * frameTransform.scaleX + frameTransform.x,\n    rect.top * frameTransform.scaleY + frameTransform.y,\n    rect.width * frameTransform.scaleX,\n    rect.height * frameTransform.scaleY\n  );\n  const direction: Record<Axis, ScrollDirection> = {\n    x: ScrollDirection.Idle,\n    y: ScrollDirection.Idle,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: scrollContainerRect.height * thresholdPercentage.y,\n    width: scrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (\n    (!isTop || (isYAxisInverted && !isBottom)) &&\n    y <= scrollContainerRect.top + threshold.height &&\n    intent?.y !== ScrollDirection.Forward &&\n    x >= scrollContainerRect.left - tolerance.x &&\n    x <= scrollContainerRect.right + tolerance.x\n  ) {\n    // Scroll Up (or Down if inverted)\n    direction.y = isYAxisInverted\n      ? ScrollDirection.Forward\n      : ScrollDirection.Reverse;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.top + threshold.height - y) / threshold.height\n      );\n  } else if (\n    (!isBottom || (isYAxisInverted && !isTop)) &&\n    y >= scrollContainerRect.bottom - threshold.height &&\n    intent?.y !== ScrollDirection.Reverse &&\n    x >= scrollContainerRect.left - tolerance.x &&\n    x <= scrollContainerRect.right + tolerance.x\n  ) {\n    // Scroll Down (or Up if inverted)\n    direction.y = isYAxisInverted\n      ? ScrollDirection.Reverse\n      : ScrollDirection.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.bottom - threshold.height - y) / threshold.height\n      );\n  }\n\n  if (\n    (!isRight || (isXAxisInverted && !isLeft)) &&\n    x >= scrollContainerRect.right - threshold.width &&\n    intent?.x !== ScrollDirection.Reverse &&\n    y >= scrollContainerRect.top - tolerance.y &&\n    y <= scrollContainerRect.bottom + tolerance.y\n  ) {\n    // Scroll Right (or Left if inverted)\n    direction.x = isXAxisInverted\n      ? ScrollDirection.Reverse\n      : ScrollDirection.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.right - threshold.width - x) / threshold.width\n      );\n  } else if (\n    (!isLeft || (isXAxisInverted && !isRight)) &&\n    x <= scrollContainerRect.left + threshold.width &&\n    intent?.x !== ScrollDirection.Forward &&\n    y >= scrollContainerRect.top - tolerance.y &&\n    y <= scrollContainerRect.bottom + tolerance.y\n  ) {\n    // Scroll Left (or Right if inverted)\n    direction.x = isXAxisInverted\n      ? ScrollDirection.Forward\n      : ScrollDirection.Reverse;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.left + threshold.width - x) / threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","import {getComputedStyles} from '../styles/getComputedStyles.ts';\nimport {isHTMLElement} from '../type-guards/isHTMLElement.ts';\nimport {getFirstScrollableAncestor} from './getScrollableAncestors.ts';\n\nfunction supportsScrollIntoViewIfNeeded(\n  element: Element\n): element is Element & {\n  scrollIntoViewIfNeeded: (centerIfNeeded?: boolean) => void;\n} {\n  return (\n    'scrollIntoViewIfNeeded' in element &&\n    typeof element.scrollIntoViewIfNeeded === 'function'\n  );\n}\n\nexport function scrollIntoViewIfNeeded(el: Element, centerIfNeeded = false) {\n  if (supportsScrollIntoViewIfNeeded(el)) {\n    el.scrollIntoViewIfNeeded(centerIfNeeded);\n    return;\n  }\n\n  if (!isHTMLElement(el)) {\n    return el.scrollIntoView();\n  }\n\n  var parent = getFirstScrollableAncestor(el);\n\n  if (!isHTMLElement(parent)) {\n    return;\n  }\n\n  const parentComputedStyle = getComputedStyles(parent, true),\n    parentBorderTopWidth = parseInt(\n      parentComputedStyle.getPropertyValue('border-top-width')\n    ),\n    parentBorderLeftWidth = parseInt(\n      parentComputedStyle.getPropertyValue('border-left-width')\n    ),\n    overTop = el.offsetTop - parent.offsetTop < parent.scrollTop,\n    overBottom =\n      el.offsetTop - parent.offsetTop + el.clientHeight - parentBorderTopWidth >\n      parent.scrollTop + parent.clientHeight,\n    overLeft = el.offsetLeft - parent.offsetLeft < parent.scrollLeft,\n    overRight =\n      el.offsetLeft -\n        parent.offsetLeft +\n        el.clientWidth -\n        parentBorderLeftWidth >\n      parent.scrollLeft + parent.clientWidth,\n    alignWithTop = overTop && !overBottom;\n\n  if ((overTop || overBottom) && centerIfNeeded) {\n    parent.scrollTop =\n      el.offsetTop -\n      parent.offsetTop -\n      parent.clientHeight / 2 -\n      parentBorderTopWidth +\n      el.clientHeight / 2;\n  }\n\n  if ((overLeft || overRight) && centerIfNeeded) {\n    parent.scrollLeft =\n      el.offsetLeft -\n      parent.offsetLeft -\n      parent.clientWidth / 2 -\n      parentBorderLeftWidth +\n      el.clientWidth / 2;\n  }\n\n  if ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {\n    el.scrollIntoView(alignWithTop);\n  }\n}\n","import type {BoundingRectangle} from '@dnd-kit/geometry';\n\nimport {type Transform} from './parseTransform.ts';\n\nexport function applyTransform(\n  rect: BoundingRectangle,\n  parsedTransform: Transform,\n  transformOrigin: string\n): BoundingRectangle {\n  const {scaleX, scaleY, x: translateX, y: translateY} = parsedTransform;\n  const x = rect.left + translateX + (1 - scaleX) * parseFloat(transformOrigin);\n  const y =\n    rect.top +\n    translateY +\n    (1 - scaleY) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width * scaleX : rect.width;\n  const h = scaleY ? rect.height * scaleY : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n","import type {BoundingRectangle} from '@dnd-kit/geometry';\n\nimport {type Transform} from './parseTransform.ts';\n\nexport function inverseTransform(\n  rect: BoundingRectangle,\n  parsedTransform: Transform,\n  transformOrigin: string\n): BoundingRectangle {\n  const {scaleX, scaleY, x: translateX, y: translateY} = parsedTransform;\n  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);\n  const y =\n    rect.top -\n    translateY -\n    (1 - scaleY) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width / scaleX : rect.width;\n  const h = scaleY ? rect.height / scaleY : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n","interface Arguments {\n  element: Element;\n  keyframes: PropertyIndexedKeyframes | Keyframe[];\n  options: KeyframeAnimationOptions;\n}\n\nexport function animateTransform({element, keyframes, options}: Arguments) {\n  return element.animate(keyframes, options).finished;\n}\n","import {getFinalKeyframe} from '../animations/getFinalKeyframe.ts';\nimport {getComputedStyles} from '../styles/getComputedStyles.ts';\n\nimport {parseTranslate} from './parseTranslate.ts';\n\nexport function computeTranslate(\n  element: Element,\n  translate = getComputedStyles(element).translate,\n  projected = true\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  if (projected) {\n    const keyframe = getFinalKeyframe(\n      element,\n      (keyframe) => 'translate' in keyframe\n    );\n\n    if (keyframe) {\n      const {translate = ''} = keyframe[0];\n\n      if (typeof translate === 'string') {\n        const finalTranslate = parseTranslate(translate);\n\n        if (finalTranslate) {\n          return finalTranslate;\n        }\n      }\n    }\n  }\n\n  if (translate) {\n    const finalTranslate = parseTranslate(translate);\n\n    if (finalTranslate) {\n      return finalTranslate;\n    }\n  }\n\n  return {x: 0, y: 0, z: 0};\n}\n","import {Scheduler} from '../scheduling/scheduler.ts';\nimport {isKeyframeEffect} from '../type-guards/isKeyframeEffect.ts';\n\nconst scheduler = new Scheduler((callback) => setTimeout(callback, 0));\nconst animations = new Map<Document | Element, Animation[]>();\nconst clear = animations.clear.bind(animations);\n\nfunction getDocumentAnimations(element: Element): Animation[] {\n  const document = element.ownerDocument;\n  let documentAnimations = animations.get(document);\n\n  if (documentAnimations) return documentAnimations;\n\n  documentAnimations = document.getAnimations();\n  animations.set(document, documentAnimations);\n  scheduler.schedule(clear);\n\n  const elementAnimations = documentAnimations.filter(\n    (animation) =>\n      isKeyframeEffect(animation.effect) && animation.effect.target === element\n  );\n\n  animations.set(element, elementAnimations);\n\n  return documentAnimations;\n}\n\n/*\n * Force animations on ancestors of the element into their end state\n * and return a function to reset them back to their current state.\n *\n * This is useful as it allows us to immediately calculate the final position\n * of an element without having to wait for the animations to finish.\n */\nexport function forceFinishAnimations(\n  element: Element,\n  options: {\n    properties: string[];\n    isValidTarget?: (target: Element) => boolean;\n  }\n): (() => void) | undefined {\n  const animations = getDocumentAnimations(element)\n    .filter((animation) => {\n      if (isKeyframeEffect(animation.effect)) {\n        const {target} = animation.effect;\n        const isValidTarget =\n          (target && options.isValidTarget?.(target)) ?? true;\n\n        if (isValidTarget) {\n          return animation.effect.getKeyframes().some((keyframe) => {\n            for (const property of options.properties) {\n              if (keyframe[property]) return true;\n            }\n          });\n        }\n      }\n    })\n    .map((animation) => {\n      const {effect, currentTime} = animation;\n      const duration = effect?.getComputedTiming().duration;\n\n      if (animation.pending || animation.playState === 'finished') return;\n\n      if (\n        typeof duration == 'number' &&\n        typeof currentTime == 'number' &&\n        currentTime < duration\n      ) {\n        animation.currentTime = duration;\n\n        return () => {\n          animation.currentTime = currentTime;\n        };\n      }\n    });\n\n  if (animations.length > 0) {\n    return () => animations.forEach((reset) => reset?.());\n  }\n}\n","import {Rectangle, type BoundingRectangle} from '@dnd-kit/geometry';\n\nimport {applyTransform} from '../transform/applyTransform.ts';\nimport {inverseTransform} from '../transform/inverseTransform.ts';\nimport {getComputedStyles} from '../styles/getComputedStyles.ts';\nimport {parseTransform, type Transform} from '../transform/index.ts';\nimport {getBoundingRectangle} from '../bounding-rectangle/getBoundingRectangle.ts';\nimport {getFrameTransform} from '../frame/getFrameTransform.ts';\nimport {isKeyframeEffect} from '../type-guards/isKeyframeEffect.ts';\nimport {forceFinishAnimations} from '../animations/forceFinishAnimations.ts';\nimport {isSafari} from '../execution-context/isSafari.ts';\n\nexport interface DOMRectangleOptions {\n  getBoundingClientRect?: (element: Element) => BoundingRectangle;\n  /* Whether to ignore transforms when calculating the rectangle */\n  ignoreTransforms?: boolean;\n  frameTransform?: Transform | null;\n}\n\nexport class DOMRectangle extends Rectangle {\n  constructor(element: Element, options: DOMRectangleOptions = {}) {\n    const {\n      frameTransform = getFrameTransform(element),\n      ignoreTransforms,\n      getBoundingClientRect = getBoundingRectangle,\n    } = options;\n    const resetAnimations = forceFinishAnimations(element, {\n      properties: ['transform', 'translate', 'scale', 'width', 'height'],\n      isValidTarget: (target) =>\n        (target !== element || isSafari()) && target.contains(element),\n    });\n    const boundingRectangle = getBoundingClientRect(element);\n    let {top, left, width, height} = boundingRectangle;\n    let updated: BoundingRectangle | undefined;\n\n    const computedStyles = getComputedStyles(element);\n    const parsedTransform = parseTransform(computedStyles);\n\n    const scale = {\n      x: parsedTransform?.scaleX ?? 1,\n      y: parsedTransform?.scaleY ?? 1,\n    };\n\n    const projectedTransform = getProjectedTransform(element, computedStyles);\n\n    resetAnimations?.();\n\n    if (parsedTransform) {\n      updated = inverseTransform(\n        boundingRectangle,\n        parsedTransform,\n        computedStyles.transformOrigin\n      );\n\n      if (ignoreTransforms || projectedTransform) {\n        top = updated.top;\n        left = updated.left;\n        width = updated.width;\n        height = updated.height;\n      }\n    }\n\n    const intrinsic = {\n      width: updated?.width ?? width,\n      height: updated?.height ?? height,\n    };\n\n    if (projectedTransform && !ignoreTransforms && updated) {\n      const projected = applyTransform(\n        updated,\n        projectedTransform,\n        computedStyles.transformOrigin\n      );\n\n      top = projected.top;\n      left = projected.left;\n      width = projected.width;\n      height = projected.height;\n      scale.x = projectedTransform.scaleX;\n      scale.y = projectedTransform.scaleY;\n    }\n\n    if (frameTransform) {\n      if (!ignoreTransforms) {\n        left *= frameTransform.scaleX;\n        width *= frameTransform.scaleX;\n        top *= frameTransform.scaleY;\n        height *= frameTransform.scaleY;\n      }\n\n      left += frameTransform.x;\n      top += frameTransform.y;\n    }\n\n    super(left, top, width, height);\n\n    this.scale = scale;\n    this.intrinsicWidth = intrinsic.width;\n    this.intrinsicHeight = intrinsic.height;\n  }\n\n  public intrinsicWidth: number;\n  public intrinsicHeight: number;\n}\n\n/*\n * Get the projected transform of an element based on its final keyframe\n */\nfunction getProjectedTransform(\n  element: Element,\n  computedStyles: CSSStyleDeclaration\n): Transform | null {\n  // Always get the latest animations on the element itself\n  const animations = element.getAnimations();\n  let projectedTransform: Transform | null = null;\n\n  if (!animations.length) return null;\n\n  for (const animation of animations) {\n    if (animation.playState !== 'running') continue;\n    const keyframes = isKeyframeEffect(animation.effect)\n      ? animation.effect.getKeyframes()\n      : [];\n    const keyframe = keyframes[keyframes.length - 1];\n\n    if (!keyframe) continue;\n\n    const {transform, translate, scale} = keyframe;\n\n    if (transform || translate || scale) {\n      const parsedTransform = parseTransform({\n        transform:\n          typeof transform === 'string' && transform\n            ? transform\n            : computedStyles.transform,\n        translate:\n          typeof translate === 'string' && translate\n            ? translate\n            : computedStyles.translate,\n        scale:\n          typeof scale === 'string' && scale ? scale : computedStyles.scale,\n      });\n\n      if (parsedTransform) {\n        projectedTransform = projectedTransform\n          ? {\n              x: projectedTransform.x + parsedTransform.x,\n              y: projectedTransform.y + parsedTransform.y,\n              z: projectedTransform.z ?? parsedTransform.z,\n              scaleX: projectedTransform.scaleX * parsedTransform.scaleX,\n              scaleY: projectedTransform.scaleY * parsedTransform.scaleY,\n            }\n          : parsedTransform;\n      }\n    }\n  }\n\n  return projectedTransform;\n}\n","export function supportsStyle(\n  element: Element\n): element is Element & {style: CSSStyleDeclaration} {\n  return (\n    'style' in element &&\n    typeof element.style === 'object' &&\n    element.style !== null &&\n    'setProperty' in element.style &&\n    'removeProperty' in element.style &&\n    typeof element.style.setProperty === 'function' &&\n    typeof element.style.removeProperty === 'function'\n  );\n}\n","import {supportsStyle} from '../type-guards/supportsStyle.ts';\n\ntype ExtractStringProperties<T> = {\n  [K in keyof T]?: T[K] extends string ? string : never;\n};\n\nexport type StyleDeclaration = ExtractStringProperties<CSSStyleDeclaration> & {\n  viewTransitionName?: string;\n};\n\nexport class Styles {\n  private initial = new Map<string, string>();\n\n  constructor(private element: Element) {}\n\n  public set(properties: Record<string, string | number>, prefix = '') {\n    const {element} = this;\n\n    if (!supportsStyle(element)) {\n      return;\n    }\n\n    for (const [key, value] of Object.entries(properties)) {\n      const property = `${prefix}${key}`;\n\n      if (!this.initial.has(property)) {\n        this.initial.set(property, element.style.getPropertyValue(property));\n      }\n\n      element.style.setProperty(\n        property,\n        typeof value === 'string' ? value : `${value}px`\n      );\n    }\n  }\n\n  public remove(properties: string[], prefix = '') {\n    const {element} = this;\n\n    if (!supportsStyle(element)) {\n      return;\n    }\n\n    for (const key of properties) {\n      const property = `${prefix}${key}`;\n\n      element.style.removeProperty(property);\n    }\n  }\n\n  public reset() {\n    const {element} = this;\n\n    if (!supportsStyle(element)) {\n      return;\n    }\n\n    for (const [key, value] of this.initial) {\n      element.style.setProperty(key, value);\n    }\n\n    if (element.getAttribute('style') === '') {\n      element.removeAttribute('style');\n    }\n  }\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\nimport {isNode} from './isNode.ts';\n\nexport function isElement(target: EventTarget | null): target is Element {\n  if (!target) return false;\n\n  return (\n    target instanceof getWindow(target).Element ||\n    (isNode(target) && target.nodeType === Node.ELEMENT_NODE)\n  );\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\n\nexport function isKeyboardEvent(\n  event: Event | null | undefined\n): event is KeyboardEvent {\n  if (!event) return false;\n\n  const {KeyboardEvent} = getWindow(event.target);\n\n  return event instanceof KeyboardEvent;\n}\n","import {getWindow} from '../execution-context/getWindow.ts';\n\nexport function isPointerEvent(\n  event: Event | null | undefined\n): event is PointerEvent {\n  if (!event) return false;\n\n  const {PointerEvent} = getWindow(event.target);\n\n  return event instanceof PointerEvent;\n}\n","interface ViewTransition {\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  finished: Promise<void>;\n  skipTransition(): void;\n}\n\nexport function supportsViewTransition(\n  document: Document\n): document is Document & {\n  startViewTransition(updateCallback: () => void): ViewTransition;\n} {\n  return 'startViewTransition' in document;\n}\n","import {isElement} from './isElement.js';\n\nexport function isTextInput(target: EventTarget | null) {\n  if (!isElement(target)) return false;\n\n  const {tagName} = target;\n\n  return (\n    tagName === 'INPUT' || tagName === 'TEXTAREA' || isContentEditable(target)\n  );\n}\n\nfunction isContentEditable(element: Element) {\n  return (\n    element.hasAttribute('contenteditable') &&\n    element.getAttribute('contenteditable') !== 'false'\n  );\n}\n","const ids: Record<string, number> = {};\n\nexport function generateUniqueId(prefix: string) {\n  const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n  ids[prefix] = id;\n\n  return `${prefix}-${id}`;\n}\n"],"names":["animations","document","target","cached","callback","listeners","_disconnected","window","scheduler","ScrollDirection","Rectangle","threshold","keyframe","translate","clear"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@dnd-kit+dom@0.1.21/node_modules/@dnd-kit/dom/index.js","sources":["file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/accessibility/defaults.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/accessibility/utilities.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/accessibility/HiddenText.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/accessibility/LiveRegion.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/accessibility/Accessibility.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/cursor/Cursor.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/feedback/constants.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/feedback/utilities.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/feedback/Feedback.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/scrolling/ScrollLock.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/scrolling/ScrollIntent.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/scrolling/Scroller.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/utilities/scheduling/scheduler.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/scrolling/AutoScroller.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/scrolling/ScrollListener.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/plugins/selection/PreventSelection.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/sensors/keyboard/KeyboardSensor.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/sensors/pointer/PointerSensor.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/manager/manager.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/entities/draggable/draggable.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/core/entities/droppable/droppable.ts"],"sourcesContent":["import type {Announcements, ScreenReaderInstructions} from './types.ts';\n\nexport const defaultAttributes = {\n  role: 'button',\n  roleDescription: 'draggable',\n  tabIndex: 0,\n};\n\nexport const defaultDescriptionIdPrefix = `dnd-kit-description`;\nexport const defaultAnnouncementIdPrefix = `dnd-kit-announcement`;\n\nexport const defaultScreenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `To pick up a draggable item, press the space bar. While dragging, use the arrow keys to move the item in a given direction. Press space again to drop the item in its new position, or press escape to cancel.`,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  dragstart({operation: {source}}) {\n    if (!source) return;\n\n    return `Picked up draggable item ${source.id}.`;\n  },\n  dragover({operation: {source, target}}) {\n    if (!source || source.id === target?.id) return;\n\n    if (target) {\n      return `Draggable item ${source.id} was moved over droppable target ${target.id}.`;\n    }\n\n    return `Draggable item ${source.id} is no longer over a droppable target.`;\n  },\n  dragend({operation: {source, target}, canceled}) {\n    if (!source) return;\n\n    if (canceled) {\n      return `Dragging was cancelled. Draggable item ${source.id} was dropped.`;\n    }\n\n    if (target) {\n      return `Draggable item ${source.id} was dropped over droppable target ${target.id}`;\n    }\n\n    return `Draggable item ${source.id} was dropped.`;\n  },\n};\n","export function isFocusable(element: Element) {\n  const tagName = element.tagName.toLowerCase();\n\n  return ['input', 'select', 'textarea', 'a', 'button'].includes(tagName);\n}\n","export function createHiddenText(id: string, value: string) {\n  const element = document.createElement('div');\n\n  element.id = id;\n  element.style.setProperty('display', 'none');\n  element.textContent = value;\n\n  return element;\n}\n","export function createLiveRegion(id: string) {\n  const element = document.createElement('div');\n\n  element.id = id;\n  element.setAttribute('role', 'status');\n  element.setAttribute('aria-live', 'polite');\n  element.setAttribute('aria-atomic', 'true');\n  element.style.setProperty('position', 'fixed');\n  element.style.setProperty('width', '1px');\n  element.style.setProperty('height', '1px');\n  element.style.setProperty('margin', '-1px');\n  element.style.setProperty('border', '0');\n  element.style.setProperty('padding', '0');\n  element.style.setProperty('overflow', 'hidden');\n  element.style.setProperty('clip', 'rect(0 0 0 0)');\n  element.style.setProperty('clip-path', 'inset(100%)');\n  element.style.setProperty('white-space', 'nowrap');\n\n  return element;\n}\n","import {Plugin} from '@dnd-kit/abstract';\nimport {isSafari, generateUniqueId, scheduler} from '@dnd-kit/dom/utilities';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport {\n  defaultAnnouncements,\n  defaultAttributes,\n  defaultAnnouncementIdPrefix,\n  defaultDescriptionIdPrefix,\n  defaultScreenReaderInstructions,\n} from './defaults.ts';\nimport type {Announcements, ScreenReaderInstructions} from './types.ts';\nimport {isFocusable} from './utilities.ts';\nimport {createHiddenText} from './HiddenText.ts';\nimport {createLiveRegion} from './LiveRegion.ts';\n\ninterface Options {\n  /**\n   * Optional id that should be used for the accessibility plugin's screen reader instructions and announcements.\n   */\n  id?: string;\n  /**\n   * Optional id prefix to use for the accessibility plugin's screen reader instructions and announcements.\n   */\n  idPrefix?: {\n    description?: string;\n    announcement?: string;\n  };\n  /**\n   * The announcements to use for the accessibility plugin.\n   */\n  announcements?: Announcements;\n  /**\n   * The screen reader instructions to use for the accessibility plugin.\n   */\n  screenReaderInstructions?: ScreenReaderInstructions;\n  /**\n   * The number of milliseconds to debounce the announcement updates.\n   *\n   * @remarks\n   * Only the `dragover` and `dragmove` announcements are debounced.\n   *\n   * @default 500\n   */\n  debounce?: number;\n}\n\nconst debouncedEvents = ['dragover', 'dragmove'];\n\nexport class Accessibility extends Plugin<DragDropManager> {\n  constructor(manager: DragDropManager, options?: Options) {\n    super(manager);\n\n    const {\n      id,\n      idPrefix: {\n        description: descriptionPrefix = defaultDescriptionIdPrefix,\n        announcement: announcementPrefix = defaultAnnouncementIdPrefix,\n      } = {},\n      announcements = defaultAnnouncements,\n      screenReaderInstructions = defaultScreenReaderInstructions,\n      debounce: debounceMs = 500,\n    } = options ?? {};\n\n    const descriptionId = id\n      ? `${descriptionPrefix}-${id}`\n      : generateUniqueId(descriptionPrefix);\n    const announcementId = id\n      ? `${announcementPrefix}-${id}`\n      : generateUniqueId(announcementPrefix);\n\n    let hiddenTextElement: HTMLElement | undefined;\n    let liveRegionElement: HTMLElement | undefined;\n    let liveRegionTextNode: Node | undefined;\n    let latestAnnouncement: string | undefined;\n\n    const updateAnnouncement = (value = latestAnnouncement) => {\n      if (!liveRegionTextNode || !value) return;\n      if (liveRegionTextNode?.nodeValue !== value) {\n        liveRegionTextNode.nodeValue = value;\n      }\n    };\n    const scheduleUpdateAnnouncement = () =>\n      scheduler.schedule(updateAnnouncement);\n    const debouncedUpdateAnnouncement = debounce(\n      scheduleUpdateAnnouncement,\n      debounceMs\n    );\n\n    const eventListeners = Object.entries(announcements).map(\n      ([eventName, getAnnouncement]) => {\n        return this.manager.monitor.addEventListener(\n          eventName as keyof Announcements,\n          (event: any, manager: DragDropManager) => {\n            const element = liveRegionTextNode;\n            if (!element) return;\n\n            const announcement = getAnnouncement?.(event, manager);\n\n            if (announcement && element.nodeValue !== announcement) {\n              latestAnnouncement = announcement;\n\n              if (debouncedEvents.includes(eventName)) {\n                debouncedUpdateAnnouncement();\n              } else {\n                scheduleUpdateAnnouncement();\n                debouncedUpdateAnnouncement.cancel();\n              }\n            }\n          }\n        );\n      }\n    );\n\n    const initialize = () => {\n      let elements = [];\n\n      if (!hiddenTextElement?.isConnected) {\n        hiddenTextElement = createHiddenText(\n          descriptionId,\n          screenReaderInstructions.draggable\n        );\n        elements.push(hiddenTextElement);\n      }\n\n      if (!liveRegionElement?.isConnected) {\n        liveRegionElement = createLiveRegion(announcementId);\n        liveRegionTextNode = document.createTextNode('');\n        liveRegionElement.appendChild(liveRegionTextNode);\n        elements.push(liveRegionElement);\n      }\n\n      if (elements.length > 0) {\n        document.body.append(...elements);\n      }\n    };\n\n    const mutations = new Set<() => void>();\n\n    function executeMutations() {\n      for (const operation of mutations) {\n        operation();\n      }\n    }\n\n    this.registerEffect(() => {\n      mutations.clear();\n\n      // Re-run effect when any of the draggable elements change\n      for (const draggable of this.manager.registry.draggables.value) {\n        const activator = draggable.handle ?? draggable.element;\n\n        if (activator) {\n          if (!hiddenTextElement || !liveRegionElement) {\n            mutations.add(initialize);\n          }\n\n          if (\n            (!isFocusable(activator) || isSafari()) &&\n            !activator.hasAttribute('tabindex')\n          ) {\n            mutations.add(() => activator.setAttribute('tabindex', '0'));\n          }\n\n          if (\n            !activator.hasAttribute('role') &&\n            !(activator.tagName.toLowerCase() === 'button')\n          ) {\n            mutations.add(() =>\n              activator.setAttribute('role', defaultAttributes.role)\n            );\n          }\n\n          if (!activator.hasAttribute('aria-roledescription')) {\n            mutations.add(() =>\n              activator.setAttribute(\n                'aria-roledescription',\n                defaultAttributes.roleDescription\n              )\n            );\n          }\n\n          if (!activator.hasAttribute('aria-describedby')) {\n            mutations.add(() =>\n              activator.setAttribute('aria-describedby', descriptionId)\n            );\n          }\n\n          for (const key of ['aria-pressed', 'aria-grabbed']) {\n            const value = String(draggable.isDragging);\n\n            if (activator.getAttribute(key) !== value) {\n              mutations.add(() => activator.setAttribute(key, value));\n            }\n          }\n\n          const disabled = String(draggable.disabled);\n\n          if (activator.getAttribute('aria-disabled') !== disabled) {\n            mutations.add(() =>\n              activator.setAttribute('aria-disabled', disabled)\n            );\n          }\n        }\n      }\n\n      if (mutations.size > 0) {\n        scheduler.schedule(executeMutations);\n      }\n    });\n\n    this.destroy = () => {\n      super.destroy();\n      hiddenTextElement?.remove();\n      liveRegionElement?.remove();\n      eventListeners.forEach((unsubscribe) => unsubscribe());\n    };\n  }\n}\n\nfunction debounce(fn: () => void, wait: number) {\n  let timeout: NodeJS.Timeout | undefined;\n  const debounced = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, wait);\n  };\n\n  debounced.cancel = () => clearTimeout(timeout);\n\n  return debounced;\n}\n","import {Plugin} from '@dnd-kit/abstract';\nimport {computed, effect} from '@dnd-kit/state';\nimport {getDocument} from '@dnd-kit/dom/utilities';\n\nimport {DragDropManager} from '../../manager/index.ts';\n\ninterface CursorPluginOptions {\n  /**\n   * The style of the cursor to be applied to the document body.\n   * @default 'grabbing'\n   */\n  cursor?: string;\n  /**\n   * The nonce to be applied to the style element.\n   */\n  nonce?: string;\n}\n\nexport class Cursor extends Plugin<DragDropManager> {\n  constructor(\n    public manager: DragDropManager,\n    options?: CursorPluginOptions\n  ) {\n    super(manager, options);\n\n    const doc = computed(() =>\n      getDocument(this.manager.dragOperation.source?.element)\n    );\n\n    this.destroy = effect(() => {\n      const {dragOperation} = this.manager;\n      const {cursor = 'grabbing', nonce} = this.options ?? {};\n\n      if (dragOperation.status.initialized) {\n        const document = doc.value;\n        const style = document.createElement('style');\n\n        if (nonce) {\n          style.setAttribute('nonce', nonce);\n        }\n\n        style.textContent = `* { cursor: ${cursor} !important; }`;\n        document.head.appendChild(style);\n\n        return () => style.remove();\n      }\n    });\n  }\n}\n","export const ATTR_PREFIX = 'data-dnd-';\nexport const DROPPING_ATTRIBUTE = `${ATTR_PREFIX}dropping`;\nexport const CSS_PREFIX = '--dnd-';\nexport const ATTRIBUTE = `${ATTR_PREFIX}dragging`;\nexport const PLACEHOLDER_ATTRIBUTE = `${ATTR_PREFIX}placeholder`;\n\nexport const IGNORED_ATTRIBUTES = [\n  ATTRIBUTE,\n  PLACEHOLDER_ATTRIBUTE,\n  'popover',\n  'aria-pressed',\n  'aria-grabbing',\n];\n\nexport const IGNORED_STYLES = ['view-transition-name'];\n\nexport const CSS_RULES = `\n  :root [${ATTRIBUTE}] {\n    position: fixed !important;\n    pointer-events: none !important;\n    touch-action: none;\n    z-index: calc(infinity);\n    will-change: translate;\n    top: var(${CSS_PREFIX}top, 0px) !important;\n    left: var(${CSS_PREFIX}left, 0px) !important;\n    right: unset !important;\n    bottom: unset !important;\n    width: var(${CSS_PREFIX}width, auto);\n    max-width: var(${CSS_PREFIX}width, auto);\n    height: var(${CSS_PREFIX}height, auto);\n    max-height: var(${CSS_PREFIX}height, auto);\n    transition: var(${CSS_PREFIX}transition) !important;\n  }\n\n  :root [${PLACEHOLDER_ATTRIBUTE}] {\n    transition: none;\n  }\n\n  :root [${PLACEHOLDER_ATTRIBUTE}='hidden'] {\n    visibility: hidden;\n  }\n\n  [${ATTRIBUTE}] * {\n    pointer-events: none !important;\n  }\n\n  [${ATTRIBUTE}]:not([${DROPPING_ATTRIBUTE}]) {\n    translate: var(${CSS_PREFIX}translate) !important;\n  }\n\n  [${ATTRIBUTE}][style*='${CSS_PREFIX}scale'] {\n    scale: var(${CSS_PREFIX}scale) !important;\n    transform-origin: var(${CSS_PREFIX}transform-origin) !important;\n  }\n\n  @layer {\n    :where([${ATTRIBUTE}][popover]) {\n      overflow: visible;\n      background: unset;\n      border: unset;\n      margin: unset;\n      padding: unset;\n      color: inherit;\n\n      &:is(input, button) {\n        border: revert;\n        background: revert;\n      }\n    }\n  }\n  [${ATTRIBUTE}]::backdrop, [${ATTR_PREFIX}overlay]:not([${ATTRIBUTE}]) {\n    display: none;\n    visibility: hidden;\n  }\n`\n  .replace(/\\n+/g, ' ')\n  .replace(/\\s+/g, ' ')\n  .trim();\n","import {untracked} from '@dnd-kit/state';\nimport {\n  cloneElement,\n  generateUniqueId,\n  getFrameElement,\n  showPopover,\n  ProxiedElements,\n  isElement,\n} from '@dnd-kit/dom/utilities';\n\nimport type {Draggable, Droppable} from '../../entities/index.ts';\nimport {ATTR_PREFIX, PLACEHOLDER_ATTRIBUTE} from './constants.ts';\n\n/**\n * Creates a placeholder element for a draggable source\n * The placeholder maintains the original element's dimensions and position\n */\nexport function createPlaceholder(\n  source: Draggable,\n  type = 'hidden'\n): Element | undefined {\n  return untracked(() => {\n    const {element, manager} = source;\n\n    if (!element || !manager) return;\n\n    const containedDroppables = findContainedDroppables(\n      element,\n      manager.registry.droppables\n    );\n    const cleanup: Array<() => void> = [];\n    const placeholder = cloneElement(element);\n    const {remove} = placeholder;\n\n    proxyDroppableElements(containedDroppables, placeholder, cleanup);\n    configurePlaceholder(placeholder, type);\n\n    // Override remove to handle cleanup of proxies\n    placeholder.remove = () => {\n      cleanup.forEach((fn) => fn());\n      remove.call(placeholder);\n    };\n\n    return placeholder;\n  });\n}\n\n/**\n * Maps droppable elements contained within the source element\n * Returns a map of droppables to their temporary identifier attributes\n */\nfunction findContainedDroppables(\n  element: Element,\n  droppables: Iterable<Droppable>\n): Map<Droppable, string> {\n  const containedDroppables = new Map<Droppable, string>();\n\n  for (const droppable of droppables) {\n    if (!droppable.element) continue;\n\n    if (element === droppable.element || element.contains(droppable.element)) {\n      const identifierAttribute = `${ATTR_PREFIX}${generateUniqueId('dom-id')}`;\n      droppable.element.setAttribute(identifierAttribute, '');\n      containedDroppables.set(droppable, identifierAttribute);\n    }\n  }\n\n  return containedDroppables;\n}\n\n/**\n * Sets up proxy relationships between original droppable elements and their clones\n */\nfunction proxyDroppableElements(\n  containedDroppables: Map<Droppable, string>,\n  placeholder: Element,\n  cleanup: Array<() => void>\n): void {\n  for (const [droppable, identifierAttribute] of containedDroppables) {\n    if (!droppable.element) continue;\n\n    const selector = `[${identifierAttribute}]`;\n    const clonedElement = placeholder.matches(selector)\n      ? placeholder\n      : placeholder.querySelector(selector);\n\n    droppable.element.removeAttribute(identifierAttribute);\n\n    if (!clonedElement) continue;\n\n    const originalElement = droppable.element;\n\n    droppable.proxy = clonedElement;\n    clonedElement.removeAttribute(identifierAttribute);\n\n    ProxiedElements.set(originalElement, clonedElement);\n\n    cleanup.push(() => {\n      ProxiedElements.delete(originalElement);\n      droppable.proxy = undefined;\n    });\n  }\n}\n\n/**\n * Configures accessibility and visual attributes for the placeholder\n */\nfunction configurePlaceholder(placeholder: Element, type = 'hidden'): void {\n  placeholder.setAttribute('inert', 'true');\n  placeholder.setAttribute('tab-index', '-1');\n  placeholder.setAttribute('aria-hidden', 'true');\n  placeholder.setAttribute(PLACEHOLDER_ATTRIBUTE, type);\n}\n\n/**\n * Checks if two elements are in the same frame context\n */\nexport function isSameFrame(element: Element, target: Element): boolean {\n  if (element === target) return true;\n  return getFrameElement(element) === getFrameElement(target);\n}\n\n/**\n * Prevent an element with the `popover` attribute from being closed\n */\nexport function preventPopoverClose(event: Event) {\n  const {target} = event;\n\n  if (\n    'newState' in event &&\n    event.newState === 'closed' &&\n    isElement(target) &&\n    target.hasAttribute('popover')\n  ) {\n    requestAnimationFrame(() => showPopover(target));\n  }\n}\n\nexport function isTableRow(element: Element): element is HTMLTableRowElement {\n  return element.tagName === 'TR';\n}\n","import {\n  effects,\n  reactive,\n  untracked,\n  type CleanupFunction,\n} from '@dnd-kit/state';\nimport {configurator, Plugin} from '@dnd-kit/abstract';\nimport {\n  animateTransform,\n  DOMRectangle,\n  getComputedStyles,\n  getDocument,\n  getFinalKeyframe,\n  getFrameTransform,\n  getWindow,\n  isHTMLElement,\n  isKeyboardEvent,\n  parseTranslate,\n  showPopover,\n  Styles,\n  supportsPopover,\n  supportsStyle,\n} from '@dnd-kit/dom/utilities';\nimport {Coordinates, Point, Rectangle} from '@dnd-kit/geometry';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport type {Draggable} from '../../entities/index.ts';\n\nimport {\n  ATTRIBUTE,\n  CSS_PREFIX,\n  CSS_RULES,\n  DROPPING_ATTRIBUTE,\n  IGNORED_ATTRIBUTES,\n  IGNORED_STYLES,\n} from './constants.ts';\nimport {\n  createPlaceholder,\n  isSameFrame,\n  isTableRow,\n  preventPopoverClose,\n} from './utilities.ts';\n\nexport interface FeedbackOptions {\n  rootElement?: Element | ((source: Draggable) => Element);\n  nonce?: string;\n}\n\ninterface State {\n  current: {\n    translate?: Coordinates;\n  };\n  initial: {\n    dimensions?: {width: number; height: number};\n    coordinates?: Coordinates;\n    frameTransform?: {x: number; y: number; scaleX: number; scaleY: number};\n    translate?: Coordinates;\n    transformOrigin?: Coordinates;\n  };\n}\n\ninterface StyleSheetRegistration {\n  cleanup: CleanupFunction;\n  instances: Set<Feedback>;\n}\n\nconst styleSheetRegistry = new Map<Document, StyleSheetRegistration>();\n\nexport class Feedback extends Plugin<DragDropManager, FeedbackOptions> {\n  @reactive\n  public accessor overlay: Element | undefined;\n\n  private state: State = {\n    initial: {},\n    current: {},\n  };\n\n  constructor(manager: DragDropManager, options?: FeedbackOptions) {\n    super(manager, options);\n\n    this.registerEffect(this.#injectStyles);\n    this.registerEffect(this.#render);\n  }\n\n  #render() {\n    const {state, manager, options} = this;\n    const {dragOperation} = manager;\n    const {position, source, status} = dragOperation;\n\n    if (status.idle) {\n      state.current = {};\n      state.initial = {};\n      return;\n    }\n\n    if (!source) return;\n\n    const {element, feedback} = source;\n\n    if (\n      !element ||\n      feedback === 'none' ||\n      !status.initialized ||\n      status.initializing\n    ) {\n      return;\n    }\n\n    const {initial} = state;\n    const feedbackElement = this.overlay ?? element;\n    const frameTransform = getFrameTransform(feedbackElement);\n    const elementFrameTransform = getFrameTransform(element);\n    const crossFrame = !isSameFrame(element, feedbackElement);\n    const shape = new DOMRectangle(element, {\n      frameTransform: crossFrame ? elementFrameTransform : null,\n      ignoreTransforms: !crossFrame,\n    });\n    const scaleDelta = {\n      x: elementFrameTransform.scaleX / frameTransform.scaleX,\n      y: elementFrameTransform.scaleY / frameTransform.scaleY,\n    };\n\n    let {width, height, top, left} = shape;\n\n    if (crossFrame) {\n      width = width / scaleDelta.x;\n      height = height / scaleDelta.y;\n    }\n\n    let elementMutationObserver: MutationObserver | undefined;\n    let documentMutationObserver: MutationObserver | undefined;\n    const styles = new Styles(feedbackElement);\n    const {\n      transition,\n      translate,\n      boxSizing,\n      paddingBlockStart,\n      paddingBlockEnd,\n      paddingInlineStart,\n      paddingInlineEnd,\n      borderInlineStartWidth,\n      borderInlineEndWidth,\n      borderBlockStartWidth,\n      borderBlockEndWidth,\n    } = getComputedStyles(element);\n    const clone = feedback === 'clone';\n    const contentBox = boxSizing === 'content-box';\n    const widthOffset = contentBox\n      ? parseInt(paddingInlineStart) +\n        parseInt(paddingInlineEnd) +\n        parseInt(borderInlineStartWidth) +\n        parseInt(borderInlineEndWidth)\n      : 0;\n    const heightOffset = contentBox\n      ? parseInt(paddingBlockStart) +\n        parseInt(paddingBlockEnd) +\n        parseInt(borderBlockStartWidth) +\n        parseInt(borderBlockEndWidth)\n      : 0;\n\n    const placeholder =\n      feedback !== 'move' && !this.overlay\n        ? createPlaceholder(source, clone ? 'clone' : 'hidden')\n        : null;\n    const isKeyboardOperation = untracked(() =>\n      isKeyboardEvent(manager.dragOperation.activatorEvent)\n    );\n\n    if (translate !== 'none') {\n      const parsedTranslate = parseTranslate(translate);\n\n      if (parsedTranslate && !initial.translate) {\n        initial.translate = parsedTranslate;\n      }\n    }\n\n    if (!initial.transformOrigin) {\n      const current = untracked(() => position.current);\n\n      initial.transformOrigin = {\n        x:\n          (current.x - left * frameTransform.scaleX - frameTransform.x) /\n          (width * frameTransform.scaleX),\n        y:\n          (current.y - top * frameTransform.scaleY - frameTransform.y) /\n          (height * frameTransform.scaleY),\n      };\n    }\n\n    const {transformOrigin} = initial;\n    const relativeTop = top * frameTransform.scaleY + frameTransform.y;\n    const relativeLeft = left * frameTransform.scaleX + frameTransform.x;\n\n    if (!initial.coordinates) {\n      initial.coordinates = {\n        x: relativeLeft,\n        y: relativeTop,\n      };\n\n      // Compoensate for transformOrigin when scaling\n      if (scaleDelta.x !== 1 || scaleDelta.y !== 1) {\n        const {scaleX, scaleY} = elementFrameTransform;\n        const {x: tX, y: tY} = transformOrigin;\n\n        initial.coordinates.x += (width * scaleX - width) * tX;\n        initial.coordinates.y += (height * scaleY - height) * tY;\n      }\n    }\n\n    if (!initial.dimensions) {\n      initial.dimensions = {width, height};\n    }\n\n    if (!initial.frameTransform) {\n      initial.frameTransform = frameTransform;\n    }\n\n    const coordinatesDelta = {\n      x: initial.coordinates.x - relativeLeft,\n      y: initial.coordinates.y - relativeTop,\n    };\n\n    const sizeDelta = {\n      width:\n        (initial.dimensions.width * initial.frameTransform.scaleX -\n          width * frameTransform.scaleX) *\n        transformOrigin.x,\n      height:\n        (initial.dimensions.height * initial.frameTransform.scaleY -\n          height * frameTransform.scaleY) *\n        transformOrigin.y,\n    };\n\n    const delta = {\n      x: coordinatesDelta.x / frameTransform.scaleX + sizeDelta.width,\n      y: coordinatesDelta.y / frameTransform.scaleY + sizeDelta.height,\n    };\n\n    const projected = {\n      left: left + delta.x,\n      top: top + delta.y,\n    };\n\n    feedbackElement.setAttribute(ATTRIBUTE, 'true');\n\n    const transform = untracked(() => dragOperation.transform);\n    const initialTranslate = initial.translate ?? {x: 0, y: 0};\n    const tX = transform.x * frameTransform.scaleX + initialTranslate.x;\n    const tY = transform.y * frameTransform.scaleY + initialTranslate.y;\n    const translateString = `${tX}px ${tY}px 0`;\n    const transitionString = transition\n      ? `${transition}, translate 0ms linear`\n      : '';\n\n    styles.set(\n      {\n        width: width - widthOffset,\n        height: height - heightOffset,\n        top: projected.top,\n        left: projected.left,\n        translate: translateString,\n        transition: transitionString,\n        scale: crossFrame ? `${scaleDelta.x} ${scaleDelta.y}` : '',\n        'transform-origin': `${transformOrigin.x * 100}% ${transformOrigin.y * 100}%`,\n      },\n      CSS_PREFIX\n    );\n\n    if (placeholder) {\n      element.insertAdjacentElement('afterend', placeholder);\n\n      if (options?.rootElement) {\n        const root =\n          typeof options.rootElement === 'function'\n            ? options.rootElement(source)\n            : options.rootElement;\n\n        root.appendChild(element);\n      }\n    }\n\n    if (supportsPopover(feedbackElement)) {\n      if (!feedbackElement.hasAttribute('popover')) {\n        feedbackElement.setAttribute('popover', 'manual');\n      }\n      showPopover(feedbackElement);\n      feedbackElement.addEventListener('beforetoggle', preventPopoverClose);\n    }\n\n    const resizeObserver = new ResizeObserver(() => {\n      if (!placeholder) return;\n\n      const placeholderShape = new DOMRectangle(placeholder, {\n        frameTransform,\n        ignoreTransforms: true,\n      });\n      const origin = transformOrigin ?? {x: 1, y: 1};\n      const dX = (width - placeholderShape.width) * origin.x + delta.x;\n      const dY = (height - placeholderShape.height) * origin.y + delta.y;\n\n      styles.set(\n        {\n          width: placeholderShape.width - widthOffset,\n          height: placeholderShape.height - heightOffset,\n          top: top + dY,\n          left: left + dX,\n        },\n        CSS_PREFIX\n      );\n      elementMutationObserver?.takeRecords();\n\n      /* Table cells need to have their width set explicitly because the feedback element is position fixed */\n      if (isTableRow(element) && isTableRow(placeholder)) {\n        const cells = Array.from(element.cells);\n        const placeholderCells = Array.from(placeholder.cells);\n\n        for (const [index, cell] of cells.entries()) {\n          const placeholderCell = placeholderCells[index];\n\n          cell.style.width = `${placeholderCell.offsetWidth}px`;\n        }\n      }\n\n      dragOperation.shape = new DOMRectangle(feedbackElement);\n    });\n\n    /* Initialize drag operation shape */\n    const initialShape = new DOMRectangle(feedbackElement);\n    untracked(() => (dragOperation.shape = initialShape));\n\n    const feedbackWindow = getWindow(feedbackElement);\n    const handleWindowResize = (event: Event) => {\n      this.manager.actions.stop({event});\n    };\n\n    if (isKeyboardOperation) {\n      feedbackWindow.addEventListener('resize', handleWindowResize);\n    }\n\n    if (untracked(() => source.status) === 'idle') {\n      requestAnimationFrame(() => (source.status = 'dragging'));\n    }\n\n    if (placeholder) {\n      resizeObserver.observe(placeholder);\n\n      elementMutationObserver = new MutationObserver((mutations) => {\n        let hasChildrenMutations = false;\n\n        for (const mutation of mutations) {\n          if (mutation.target !== element) {\n            hasChildrenMutations = true;\n            continue;\n          }\n\n          if (mutation.type !== 'attributes') {\n            // Should never happen, but defensive programming just in case\n            continue;\n          }\n\n          // Attribute name is guaranteed to be non-null if type is \"attributes\"\n          // https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/attributeName#value\n          const attributeName = mutation.attributeName!;\n\n          if (\n            attributeName.startsWith('aria-') ||\n            IGNORED_ATTRIBUTES.includes(attributeName)\n          ) {\n            continue;\n          }\n\n          const attributeValue = element.getAttribute(attributeName);\n\n          if (attributeName === 'style') {\n            if (supportsStyle(element) && supportsStyle(placeholder)) {\n              const styles = element.style;\n\n              for (const key of Array.from(placeholder.style)) {\n                if (styles.getPropertyValue(key) === '') {\n                  placeholder.style.removeProperty(key);\n                }\n              }\n\n              for (const key of Array.from(styles)) {\n                if (\n                  IGNORED_STYLES.includes(key) ||\n                  key.startsWith(CSS_PREFIX)\n                ) {\n                  continue;\n                }\n\n                const value = styles.getPropertyValue(key);\n\n                placeholder.style.setProperty(key, value);\n              }\n            }\n          } else if (attributeValue !== null) {\n            placeholder.setAttribute(attributeName, attributeValue);\n          } else {\n            placeholder.removeAttribute(attributeName);\n          }\n        }\n\n        if (hasChildrenMutations && clone) {\n          placeholder.innerHTML = element.innerHTML;\n        }\n      });\n\n      elementMutationObserver.observe(element, {\n        attributes: true,\n        subtree: true,\n        childList: true,\n      });\n\n      /* Make sure the placeholder and the source element positions are always in sync */\n      documentMutationObserver = new MutationObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.addedNodes.length === 0) continue;\n\n          for (const node of Array.from(entry.addedNodes)) {\n            if (\n              node.contains(element) &&\n              element.nextElementSibling !== placeholder\n            ) {\n              /* Update the position of the placeholder when the source element is moved */\n              element.insertAdjacentElement('afterend', placeholder);\n              /* Force the source element to be promoted back to the top layer */\n              showPopover(feedbackElement);\n              return;\n            }\n\n            if (\n              node.contains(placeholder) &&\n              placeholder.previousElementSibling !== element\n            ) {\n              /* Update the position of the source element when the placeholder is moved */\n              placeholder.insertAdjacentElement('beforebegin', element);\n              /* Force the source element to be promoted back to the top layer */\n              showPopover(feedbackElement);\n              return;\n            }\n          }\n        }\n      });\n\n      /* Observe mutations on the element's owner document body */\n      documentMutationObserver.observe(element.ownerDocument.body, {\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    const id = manager.dragOperation.source?.id;\n\n    const restoreFocus = () => {\n      if (!isKeyboardOperation || id == null) {\n        return;\n      }\n\n      const draggable = manager.registry.draggables.get(id);\n      const element = draggable?.handle ?? draggable?.element;\n\n      if (isHTMLElement(element)) {\n        element.focus();\n      }\n    };\n    const cleanup = () => {\n      elementMutationObserver?.disconnect();\n      documentMutationObserver?.disconnect();\n      resizeObserver.disconnect();\n      feedbackWindow.removeEventListener('resize', handleWindowResize);\n\n      if (supportsPopover(feedbackElement)) {\n        feedbackElement.removeEventListener(\n          'beforetoggle',\n          preventPopoverClose\n        );\n        feedbackElement.removeAttribute('popover');\n      }\n\n      feedbackElement.removeAttribute(ATTRIBUTE);\n      styles.reset();\n\n      source.status = 'idle';\n\n      const moved = state.current.translate != null;\n\n      if (\n        placeholder &&\n        (moved ||\n          placeholder.parentElement !== feedbackElement.parentElement) &&\n        feedbackElement.isConnected\n      ) {\n        placeholder.replaceWith(feedbackElement);\n      }\n\n      placeholder?.remove();\n    };\n\n    const cleanupEffects = effects(\n      // Update transform on move\n      () => {\n        const {transform, status} = dragOperation;\n\n        if (!transform.x && !transform.y && !state.current.translate) {\n          return;\n        }\n\n        if (status.dragging) {\n          const initialTranslate = initial.translate ?? {x: 0, y: 0};\n          const translate = {\n            x: transform.x / frameTransform.scaleX + initialTranslate.x,\n            y: transform.y / frameTransform.scaleY + initialTranslate.y,\n          };\n          const previousTranslate = state.current.translate;\n          const modifiers = untracked(() => dragOperation.modifiers);\n          const currentShape = untracked(() => dragOperation.shape?.current);\n          const translateTransition = isKeyboardOperation\n            ? '250ms cubic-bezier(0.25, 1, 0.5, 1)'\n            : '0ms linear';\n\n          styles.set(\n            {\n              transition: `${transition}, translate ${translateTransition}`,\n              translate: `${translate.x}px ${translate.y}px 0`,\n            },\n            CSS_PREFIX\n          );\n          elementMutationObserver?.takeRecords();\n\n          if (\n            currentShape &&\n            currentShape !== initialShape &&\n            previousTranslate &&\n            !modifiers.length\n          ) {\n            const delta = Point.delta(translate, previousTranslate);\n\n            dragOperation.shape = Rectangle.from(\n              currentShape.boundingRectangle\n            ).translate(\n              // Need to take into account frame transform when optimistically updating shape\n              delta.x * frameTransform.scaleX,\n              delta.y * frameTransform.scaleY\n            );\n          } else {\n            dragOperation.shape = new DOMRectangle(feedbackElement);\n          }\n\n          state.current.translate = translate;\n        }\n      },\n      // Drop animation\n      function () {\n        if (dragOperation.status.dropped) {\n          // Dispose of the effect\n          this.dispose();\n\n          source.status = 'dropping';\n\n          let translate = state.current.translate;\n          const moved = translate != null;\n\n          if (!translate && element !== feedbackElement) {\n            translate = {\n              x: 0,\n              y: 0,\n            };\n          }\n\n          if (!translate) {\n            cleanup();\n            return;\n          }\n\n          const dropAnimation = () => {\n            {\n              /* Force the source element to be promoted to the top layer before animating it */\n              showPopover(feedbackElement);\n\n              // Pause any translate transitions that are running on the feedback element\n              const [, animation] =\n                getFinalKeyframe(\n                  feedbackElement,\n                  (keyframe) => 'translate' in keyframe\n                ) ?? [];\n\n              animation?.pause();\n\n              const target = placeholder ?? element;\n              const options = {\n                frameTransform: isSameFrame(feedbackElement, target)\n                  ? null\n                  : undefined,\n              };\n              const current = new DOMRectangle(feedbackElement, options);\n              // With a keyboard activator, since there is a transition on the translate property,\n              // the translate value may not be the same as the computed value if the transition is still running.\n              const currentTranslate =\n                parseTranslate(getComputedStyles(feedbackElement).translate) ??\n                translate;\n              const final = new DOMRectangle(target, options);\n              const delta = Rectangle.delta(current, final, source.alignment);\n              const finalTranslate = {\n                x: currentTranslate.x - delta.x,\n                y: currentTranslate.y - delta.y,\n              };\n              const heightKeyframes =\n                Math.round(current.intrinsicHeight) !==\n                Math.round(final.intrinsicHeight)\n                  ? {\n                      minHeight: [\n                        `${current.intrinsicHeight}px`,\n                        `${final.intrinsicHeight}px`,\n                      ],\n                      maxHeight: [\n                        `${current.intrinsicHeight}px`,\n                        `${final.intrinsicHeight}px`,\n                      ],\n                    }\n                  : {};\n              const widthKeyframes =\n                Math.round(current.intrinsicWidth) !==\n                Math.round(final.intrinsicWidth)\n                  ? {\n                      minWidth: [\n                        `${current.intrinsicWidth}px`,\n                        `${final.intrinsicWidth}px`,\n                      ],\n                      maxWidth: [\n                        `${current.intrinsicWidth}px`,\n                        `${final.intrinsicWidth}px`,\n                      ],\n                    }\n                  : {};\n\n              styles.set({transition}, CSS_PREFIX);\n              feedbackElement.setAttribute(DROPPING_ATTRIBUTE, '');\n              elementMutationObserver?.takeRecords();\n\n              animateTransform({\n                element: feedbackElement,\n                keyframes: {\n                  ...heightKeyframes,\n                  ...widthKeyframes,\n                  translate: [\n                    `${currentTranslate.x}px ${currentTranslate.y}px 0`,\n                    `${finalTranslate.x}px ${finalTranslate.y}px 0`,\n                  ],\n                },\n                options: {\n                  duration: moved || feedbackElement !== element ? 250 : 0,\n                  easing: 'ease',\n                },\n              }).then(() => {\n                feedbackElement.removeAttribute(DROPPING_ATTRIBUTE);\n                animation?.finish();\n                cleanup();\n                requestAnimationFrame(restoreFocus);\n              });\n            }\n          };\n\n          manager.renderer.rendering.then(dropAnimation);\n        }\n      }\n    );\n\n    return () => {\n      cleanup();\n      cleanupEffects();\n    };\n  }\n\n  #injectStyles() {\n    const {status, source, target} = this.manager.dragOperation;\n    const {nonce} = this.options ?? {};\n\n    if (status.initializing) {\n      const sourceDocument = getDocument(source?.element ?? null);\n      const targetDocument = getDocument(target?.element ?? null);\n      const documents = new Set([sourceDocument, targetDocument]);\n\n      for (const doc of documents) {\n        let registration = styleSheetRegistry.get(doc);\n\n        if (!registration) {\n          const style = document.createElement('style');\n          style.textContent = CSS_RULES;\n          if (nonce) {\n            style.setAttribute('nonce', nonce);\n          }\n          doc.head.prepend(style);\n          const mutationObserver = new MutationObserver((entries) => {\n            for (const entry of entries) {\n              if (entry.type === 'childList') {\n                const removedNodes = Array.from(entry.removedNodes);\n\n                if (removedNodes.length > 0 && removedNodes.includes(style)) {\n                  // Re-inject the style tag if it gets removed from the DOM\n                  doc.head.prepend(style);\n                }\n              }\n            }\n          });\n          mutationObserver.observe(doc.head, {childList: true});\n\n          registration = {\n            cleanup: () => {\n              mutationObserver.disconnect();\n              style.remove();\n            },\n            instances: new Set(),\n          };\n          styleSheetRegistry.set(doc, registration);\n        }\n\n        // Track this instance for this document\n        registration.instances.add(this);\n      }\n    }\n  }\n\n  public destroy(): void {\n    super.destroy();\n\n    // Clean up documents this instance was tracking\n    for (const [doc, registration] of styleSheetRegistry.entries()) {\n      if (registration.instances.has(this)) {\n        registration.instances.delete(this);\n\n        // If no more instances are using this document, clean it up\n        if (registration.instances.size === 0) {\n          registration.cleanup();\n          styleSheetRegistry.delete(doc);\n        }\n      }\n    }\n  }\n\n  static configure = configurator(Feedback);\n}\n","import {reactive} from '@dnd-kit/state';\nimport {ScrollDirection as Direction} from '@dnd-kit/dom/utilities';\n\nconst LOCKED = true;\nconst UNLOCKED = false;\n\nexport class ScrollLock {\n  @reactive private accessor [Direction.Forward] = LOCKED;\n  @reactive private accessor [Direction.Reverse] = LOCKED;\n\n  public isLocked(direction?: Direction): boolean {\n    if (direction === Direction.Idle) {\n      return false;\n    }\n\n    if (direction == null) {\n      return (\n        this[Direction.Forward] === LOCKED && this[Direction.Reverse] === LOCKED\n      );\n    }\n\n    return this[direction] === LOCKED;\n  }\n\n  public unlock(direction: Direction) {\n    if (direction === Direction.Idle) {\n      return;\n    }\n\n    this[direction] = UNLOCKED;\n  }\n}\n","import {batch, effect, signal, type Signal} from '@dnd-kit/state';\nimport {Plugin} from '@dnd-kit/abstract';\nimport {Axes} from '@dnd-kit/geometry';\nimport type {Coordinates} from '@dnd-kit/geometry';\nimport {ScrollDirection} from '@dnd-kit/dom/utilities';\n\nimport type {DragDropManager} from '../../manager/index.ts';\n\nimport {ScrollLock} from './ScrollLock.ts';\n\nconst DIRECTIONS = [ScrollDirection.Forward, ScrollDirection.Reverse];\n\nclass ScrollIntent {\n  public x = new ScrollLock();\n  public y = new ScrollLock();\n\n  public isLocked(): boolean {\n    return this.x.isLocked() && this.y.isLocked();\n  }\n}\n\nexport class ScrollIntentTracker extends Plugin<DragDropManager> {\n  private signal: Signal<ScrollIntent | null>;\n\n  constructor(manager: DragDropManager) {\n    super(manager);\n\n    const scrollIntent = signal<ScrollIntent>(new ScrollIntent());\n    let previousDelta: Coordinates | null = null;\n\n    this.signal = scrollIntent;\n\n    effect(() => {\n      const {status} = manager.dragOperation;\n\n      if (!status.initialized) {\n        previousDelta = null;\n        scrollIntent.value = new ScrollIntent();\n        return;\n      }\n\n      const {delta} = manager.dragOperation.position;\n\n      if (previousDelta) {\n        const directions = {\n          x: getDirection(delta.x, previousDelta.x),\n          y: getDirection(delta.y, previousDelta.y),\n        };\n\n        const intent = scrollIntent.peek();\n\n        batch(() => {\n          for (const axis of Axes) {\n            for (const direction of DIRECTIONS) {\n              if (directions[axis] === direction) {\n                intent[axis].unlock(direction);\n              }\n            }\n          }\n\n          scrollIntent.value = intent;\n        });\n      }\n\n      previousDelta = delta;\n    });\n  }\n\n  get current(): ScrollIntent | null {\n    return this.signal.peek();\n  }\n}\n\nfunction getDirection(a: number, b: number): ScrollDirection {\n  return Math.sign(a - b);\n}\n","import {CorePlugin} from '@dnd-kit/abstract';\nimport {computed, deepEqual, reactive} from '@dnd-kit/state';\nimport {\n  canScroll,\n  detectScrollIntent,\n  getScrollableAncestors,\n  getElementFromPoint,\n  ScrollDirection,\n  scheduler,\n  isKeyboardEvent,\n  getDocument,\n  getFrameTransform,\n} from '@dnd-kit/dom/utilities';\nimport {Axes, type Coordinates} from '@dnd-kit/geometry';\n\nimport type {DragDropManager} from '../../manager/index.ts';\n\nimport {ScrollIntentTracker} from './ScrollIntent.ts';\n\nexport class Scroller extends CorePlugin<DragDropManager> {\n  public getScrollableElements: () => Set<Element> | null;\n\n  private scrollIntentTracker: ScrollIntentTracker;\n\n  @reactive\n  public accessor autoScrolling = false;\n\n  constructor(manager: DragDropManager) {\n    super(manager);\n\n    let previousElementFromPoint: Element | null = null;\n    let previousScrollableElements: Set<Element> | null = null;\n    const elementFromPoint = computed(() => {\n      const {position, source} = manager.dragOperation;\n\n      if (!position) {\n        return null;\n      }\n\n      const element = getElementFromPoint(\n        getDocument(source?.element),\n        position.current\n      );\n\n      if (element) {\n        previousElementFromPoint = element;\n      }\n\n      return element ?? previousElementFromPoint;\n    });\n    const scrollableElements = computed(() => {\n      const element = elementFromPoint.value;\n      const {documentElement} = getDocument(element);\n\n      if (!element || element === documentElement) {\n        const {target} = manager.dragOperation;\n        const targetElement = target?.element;\n\n        if (targetElement) {\n          const elements = getScrollableAncestors(targetElement, {\n            excludeElement: false,\n          });\n          previousScrollableElements = elements;\n\n          return elements;\n        }\n      }\n\n      if (element) {\n        const elements = getScrollableAncestors(element, {\n          excludeElement: false,\n        });\n\n        if (\n          this.autoScrolling &&\n          previousScrollableElements &&\n          elements.size < previousScrollableElements?.size\n        ) {\n          return previousScrollableElements;\n        }\n\n        previousScrollableElements = elements;\n\n        return elements;\n      }\n\n      previousScrollableElements = null;\n\n      return null;\n    }, deepEqual);\n\n    this.getScrollableElements = () => {\n      return scrollableElements.value;\n    };\n\n    this.scrollIntentTracker = new ScrollIntentTracker(manager);\n\n    this.destroy = manager.monitor.addEventListener('dragmove', (event) => {\n      if (\n        this.disabled ||\n        event.defaultPrevented ||\n        !isKeyboardEvent(manager.dragOperation.activatorEvent) ||\n        !event.by\n      ) {\n        return;\n      }\n\n      // Prevent the move event if we can scroll to the new coordinates\n      if (this.scroll({by: event.by})) {\n        event.preventDefault();\n      }\n    });\n  }\n\n  #meta: {element: Element; by: Coordinates} | undefined;\n\n  #scroll = () => {\n    if (!this.#meta) {\n      return;\n    }\n\n    const {element, by} = this.#meta;\n\n    if (by.y) element.scrollTop += by.y;\n    if (by.x) element.scrollLeft += by.x;\n  };\n\n  public scroll = (options?: {by: Coordinates}): boolean => {\n    if (this.disabled) {\n      return false;\n    }\n\n    const elements = this.getScrollableElements();\n\n    if (!elements) {\n      this.#meta = undefined;\n      return false;\n    }\n\n    const {position} = this.manager.dragOperation;\n    const currentPosition = position?.current;\n\n    if (currentPosition) {\n      const {by} = options ?? {};\n      const intent = by\n        ? {\n            x: getScrollIntent(by.x),\n            y: getScrollIntent(by.y),\n          }\n        : undefined;\n      const scrollIntent = intent\n        ? undefined\n        : this.scrollIntentTracker.current;\n\n      if (scrollIntent?.isLocked()) {\n        return false;\n      }\n\n      for (const scrollableElement of elements) {\n        const elementCanScroll = canScroll(scrollableElement, by);\n\n        if (elementCanScroll.x || elementCanScroll.y) {\n          const {speed, direction} = detectScrollIntent(\n            scrollableElement,\n            currentPosition,\n            intent\n          );\n\n          if (scrollIntent) {\n            for (const axis of Axes) {\n              if (scrollIntent[axis].isLocked(direction[axis])) {\n                speed[axis] = 0;\n                direction[axis] = 0;\n              }\n            }\n          }\n\n          if (direction.x || direction.y) {\n            const {x, y} = by ?? direction;\n            const scrollLeftBy = x * speed.x;\n            const scrollTopBy = y * speed.y;\n\n            if (scrollLeftBy || scrollTopBy) {\n              const previousScrollBy = this.#meta?.by;\n\n              if (this.autoScrolling && previousScrollBy) {\n                const scrollIntentMismatch =\n                  (previousScrollBy.x && !scrollLeftBy) ||\n                  (previousScrollBy.y && !scrollTopBy);\n\n                if (scrollIntentMismatch) continue;\n              }\n\n              this.#meta = {\n                element: scrollableElement,\n                by: {\n                  x: scrollLeftBy,\n                  y: scrollTopBy,\n                },\n              };\n\n              scheduler.schedule(this.#scroll);\n\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    this.#meta = undefined;\n    return false;\n  };\n}\n\nfunction getScrollIntent(value: number) {\n  if (value > 0) {\n    return ScrollDirection.Forward;\n  }\n\n  if (value < 0) {\n    return ScrollDirection.Reverse;\n  }\n\n  return ScrollDirection.Idle;\n}\n","type Callback = () => void;\n\nexport class Scheduler<T extends (callback: Callback) => any> {\n  constructor(private scheduler: T) {}\n\n  private pending: boolean = false;\n  private tasks: Set<() => void> = new Set();\n  private resolvers: Set<() => void> = new Set();\n\n  public schedule(task: () => void): Promise<void> {\n    this.tasks.add(task);\n\n    if (!this.pending) {\n      this.pending = true;\n      this.scheduler(this.flush);\n    }\n\n    return new Promise<void>((resolve) => this.resolvers.add(resolve));\n  }\n\n  public flush = () => {\n    const {tasks, resolvers} = this;\n\n    this.pending = false;\n    this.tasks = new Set();\n    this.resolvers = new Set();\n\n    for (const task of tasks) {\n      task();\n    }\n\n    for (const resolve of resolvers) {\n      resolve();\n    }\n  };\n}\n\nexport const scheduler = new Scheduler((callback) => {\n  if (typeof requestAnimationFrame === 'function') {\n    requestAnimationFrame(callback);\n  } else {\n    callback();\n  }\n});\n","import {Plugin} from '@dnd-kit/abstract';\nimport {effect} from '@dnd-kit/state';\nimport type {CleanupFunction} from '@dnd-kit/state';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport {Scroller} from './Scroller.ts';\nimport {scheduler} from '../../../utilities/scheduling/scheduler.ts';\n\ninterface Options {}\n\nconst AUTOSCROLL_INTERVAL = 10;\n\nexport class AutoScroller extends Plugin<DragDropManager> {\n  public destroy: CleanupFunction;\n\n  constructor(manager: DragDropManager, _options?: Options) {\n    super(manager);\n\n    const scroller = manager.registry.plugins.get(Scroller);\n\n    if (!scroller) {\n      throw new Error('AutoScroller plugin depends on Scroller plugin');\n    }\n\n    this.destroy = effect(() => {\n      if (this.disabled) {\n        return;\n      }\n\n      // We consume the position from the drag operation\n      // so that this effect is run when the position changes\n      const {position: _, status} = manager.dragOperation;\n\n      if (status.dragging) {\n        const canScroll = scroller.scroll();\n\n        if (canScroll) {\n          scroller.autoScrolling = true;\n          const interval = setInterval(\n            () => scheduler.schedule(scroller.scroll),\n            AUTOSCROLL_INTERVAL\n          );\n\n          return () => {\n            clearInterval(interval);\n          };\n        } else {\n          scroller.autoScrolling = false;\n        }\n      }\n    });\n  }\n}\n","import {CorePlugin} from '@dnd-kit/abstract';\nimport {effect} from '@dnd-kit/state';\n\nimport type {DragDropManager} from '../../manager/index.ts';\n\nconst listenerOptions: AddEventListenerOptions = {\n  capture: true,\n  passive: true,\n};\n\nexport class ScrollListener extends CorePlugin<DragDropManager> {\n  #timeout: NodeJS.Timeout | undefined;\n\n  constructor(manager: DragDropManager) {\n    super(manager);\n\n    const {dragOperation} = this.manager;\n\n    this.destroy = effect(() => {\n      const enabled = dragOperation.status.dragging;\n\n      if (enabled) {\n        const root = dragOperation.source?.element?.ownerDocument ?? document;\n\n        root.addEventListener('scroll', this.handleScroll, listenerOptions);\n\n        return () => {\n          root.removeEventListener(\n            'scroll',\n            this.handleScroll,\n            listenerOptions\n          );\n        };\n      }\n    });\n  }\n\n  private handleScroll = () => {\n    if (this.#timeout == null) {\n      this.#timeout = setTimeout(() => {\n        this.manager.collisionObserver.forceUpdate(false);\n        this.#timeout = undefined;\n      }, 50);\n    }\n  };\n}\n","import {Plugin} from '@dnd-kit/abstract';\nimport {effect} from '@dnd-kit/state';\n\nimport {DragDropManager} from '../../manager/index.ts';\n\ninterface PreventSelectionPluginOptions {\n  /**\n   * The nonce to be applied to the style element.\n   */\n  nonce?: string;\n}\n\nexport class PreventSelection extends Plugin<DragDropManager> {\n  constructor(\n    public manager: DragDropManager,\n    options?: PreventSelectionPluginOptions\n  ) {\n    super(manager, options);\n\n    this.destroy = effect(() => {\n      const {dragOperation} = this.manager;\n      const {nonce} = this.options ?? {};\n\n      if (dragOperation.status.initialized) {\n        const style = document.createElement('style');\n        if (nonce) {\n          style.setAttribute('nonce', nonce);\n        }\n        style.textContent = `* { user-select: none !important; -webkit-user-select: none !important; }`;\n        document.head.appendChild(style);\n\n        removeSelection();\n        document.addEventListener('selectionchange', removeSelection, {\n          capture: true,\n        });\n\n        return () => {\n          document.removeEventListener('selectionchange', removeSelection, {\n            capture: true,\n          });\n          style.remove();\n        };\n      }\n    });\n  }\n}\n\nfunction removeSelection() {\n  document.getSelection()?.removeAllRanges();\n}\n","import {configurator, Sensor} from '@dnd-kit/abstract';\nimport {effect} from '@dnd-kit/state';\nimport type {CleanupFunction} from '@dnd-kit/state';\nimport {\n  getDocument,\n  isElement,\n  isKeyboardEvent,\n  scrollIntoViewIfNeeded,\n  Listeners,\n  DOMRectangle,\n} from '@dnd-kit/dom/utilities';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport type {Draggable} from '../../entities/index.ts';\nimport {AutoScroller} from '../../plugins/index.ts';\n\nexport type KeyCode = KeyboardEvent['code'];\n\nexport type KeyboardCodes = {\n  start: KeyCode[];\n  cancel: KeyCode[];\n  end: KeyCode[];\n  up: KeyCode[];\n  down: KeyCode[];\n  left: KeyCode[];\n  right: KeyCode[];\n};\n\nexport interface KeyboardSensorOptions {\n  /**\n   * The offset by which the keyboard sensor should move the draggable.\n   *\n   * @default 10\n   */\n  offset?: number | {x: number; y: number};\n  /**\n   * The keyboard codes that activate the keyboard sensor.\n   *\n   * @default {\n   *   start: ['Space', 'Enter'],\n   *   cancel: ['Escape'],\n   *   end: ['Space', 'Enter', 'Tab'],\n   *   up: ['ArrowUp'],\n   *   down: ['ArrowDown'],\n   *   left: ['ArrowLeft'],\n   *   right: ['ArrowRight']\n   * }\n   */\n  keyboardCodes?: KeyboardCodes;\n  /**\n   * Function that determines if the keyboard sensor should activate.\n   */\n  shouldActivate?(args: {\n    event: KeyboardEvent;\n    source: Draggable;\n    manager: DragDropManager;\n  }): boolean;\n}\n\nconst defaults = Object.freeze<Required<KeyboardSensorOptions>>({\n  offset: 10,\n  keyboardCodes: {\n    start: ['Space', 'Enter'],\n    cancel: ['Escape'],\n    end: ['Space', 'Enter', 'Tab'],\n    up: ['ArrowUp'],\n    down: ['ArrowDown'],\n    left: ['ArrowLeft'],\n    right: ['ArrowRight'],\n  },\n  shouldActivate(args: {\n    event: KeyboardEvent;\n    source: Draggable;\n    manager: DragDropManager;\n  }) {\n    const {event, source} = args;\n    const target = source.handle ?? source.element;\n    return event.target === target;\n  },\n});\n\n/**\n * The KeyboardSensor class is an input sensor that handles Keyboard events.\n */\nexport class KeyboardSensor extends Sensor<\n  DragDropManager,\n  KeyboardSensorOptions\n> {\n  constructor(\n    public manager: DragDropManager,\n    public options?: KeyboardSensorOptions\n  ) {\n    super(manager);\n  }\n\n  #cleanupFunctions: CleanupFunction[] = [];\n\n  protected listeners = new Listeners();\n\n  public bind(source: Draggable, options = this.options) {\n    const unbind = effect(() => {\n      const target = source.handle ?? source.element;\n      const listener: EventListener = (event: Event) => {\n        if (isKeyboardEvent(event)) {\n          this.handleSourceKeyDown(event, source, options);\n        }\n      };\n\n      if (target) {\n        target.addEventListener('keydown', listener);\n\n        return () => {\n          target.removeEventListener('keydown', listener);\n        };\n      }\n    });\n\n    return unbind;\n  }\n\n  protected handleSourceKeyDown = (\n    event: KeyboardEvent,\n    source: Draggable,\n    options: KeyboardSensorOptions | undefined\n  ) => {\n    if (this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (!isElement(event.target)) {\n      return;\n    }\n\n    if (source.disabled) {\n      return;\n    }\n\n    const {\n      keyboardCodes = defaults.keyboardCodes,\n      shouldActivate = defaults.shouldActivate,\n    } = options ?? {};\n\n    if (!keyboardCodes.start.includes(event.code)) {\n      return;\n    }\n\n    if (!this.manager.dragOperation.status.idle) {\n      return;\n    }\n\n    if (shouldActivate({event, source, manager: this.manager})) {\n      this.handleStart(event, source, options);\n    }\n  };\n\n  protected handleStart(\n    event: KeyboardEvent,\n    source: Draggable,\n    options: KeyboardSensorOptions | undefined\n  ) {\n    const {element} = source;\n\n    if (!element) {\n      throw new Error('Source draggable does not have an associated element');\n    }\n\n    event.preventDefault();\n    event.stopImmediatePropagation();\n\n    scrollIntoViewIfNeeded(element);\n\n    const {center} = new DOMRectangle(element);\n    const controller = this.manager.actions.start({\n      event,\n      coordinates: {\n        x: center.x,\n        y: center.y,\n      },\n      source,\n    });\n\n    if (controller.signal.aborted) return this.cleanup();\n\n    this.sideEffects();\n\n    const sourceDocument = getDocument(element);\n    const listeners = [\n      this.listeners.bind(sourceDocument, [\n        {\n          type: 'keydown',\n          listener: (event: KeyboardEvent) =>\n            this.handleKeyDown(event, source, options),\n          options: {capture: true},\n        },\n      ]),\n    ];\n\n    this.#cleanupFunctions.push(...listeners);\n  }\n\n  protected handleKeyDown(\n    event: KeyboardEvent,\n    _source: Draggable,\n    options: KeyboardSensorOptions | undefined\n  ) {\n    const {keyboardCodes = defaults.keyboardCodes} = options ?? {};\n\n    if (isKeycode(event, [...keyboardCodes.end, ...keyboardCodes.cancel])) {\n      event.preventDefault();\n      const canceled = isKeycode(event, keyboardCodes.cancel);\n\n      this.handleEnd(event, canceled);\n      return;\n    }\n\n    if (isKeycode(event, keyboardCodes.up)) {\n      this.handleMove('up', event);\n    } else if (isKeycode(event, keyboardCodes.down)) {\n      this.handleMove('down', event);\n    }\n\n    if (isKeycode(event, keyboardCodes.left)) {\n      this.handleMove('left', event);\n    } else if (isKeycode(event, keyboardCodes.right)) {\n      this.handleMove('right', event);\n    }\n  }\n\n  protected handleEnd(event: Event, canceled: boolean) {\n    this.manager.actions.stop({\n      event,\n      canceled,\n    });\n\n    this.cleanup();\n  }\n\n  protected handleMove(\n    direction: 'up' | 'down' | 'left' | 'right',\n    event: KeyboardEvent\n  ) {\n    const {shape} = this.manager.dragOperation;\n    const factor = event.shiftKey ? 5 : 1;\n    let by = {\n      x: 0,\n      y: 0,\n    };\n    let offset = this.options?.offset ?? defaults.offset;\n\n    if (typeof offset === 'number') {\n      offset = {x: offset, y: offset};\n    }\n\n    if (!shape) {\n      return;\n    }\n\n    switch (direction) {\n      case 'up':\n        by = {x: 0, y: -offset.y * factor};\n        break;\n      case 'down':\n        by = {x: 0, y: offset.y * factor};\n        break;\n      case 'left':\n        by = {x: -offset.x * factor, y: 0};\n        break;\n      case 'right':\n        by = {x: offset.x * factor, y: 0};\n        break;\n    }\n\n    if (by.x || by.y) {\n      event.preventDefault();\n\n      this.manager.actions.move({\n        event,\n        by,\n      });\n    }\n  }\n\n  private sideEffects() {\n    const autoScroller = this.manager.registry.plugins.get(AutoScroller as any);\n\n    if (autoScroller?.disabled === false) {\n      autoScroller.disable();\n\n      this.#cleanupFunctions.push(() => {\n        autoScroller.enable();\n      });\n    }\n  }\n\n  protected cleanup() {\n    this.#cleanupFunctions.forEach((cleanup) => cleanup());\n    this.#cleanupFunctions = [];\n  }\n\n  public destroy() {\n    this.cleanup();\n    // Remove all event listeners\n    this.listeners.clear();\n  }\n\n  static configure = configurator(KeyboardSensor);\n\n  static defaults = defaults;\n}\n\nfunction isKeycode(event: KeyboardEvent, codes: KeyCode[]) {\n  return codes.includes(event.code);\n}\n","import {effect} from '@dnd-kit/state';\nimport type {CleanupFunction} from '@dnd-kit/state';\nimport {Sensor, configurator} from '@dnd-kit/abstract';\nimport {\n  exceedsDistance,\n  type Distance,\n  type Coordinates,\n} from '@dnd-kit/geometry';\nimport {\n  getDocument,\n  isElement,\n  isHTMLElement,\n  isPointerEvent,\n  Listeners,\n  getFrameTransform,\n  scheduler,\n  isTextInput,\n} from '@dnd-kit/dom/utilities';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport type {Draggable} from '../../entities/index.ts';\n\nexport interface DelayConstraint {\n  value: number;\n  tolerance: Distance;\n}\n\nexport interface DistanceConstraint {\n  value: Distance;\n  tolerance?: Distance;\n}\n\nexport interface ActivationConstraints {\n  distance?: DistanceConstraint;\n  delay?: DelayConstraint;\n}\n\ntype Maybe<T> = T | undefined;\n\nexport interface PointerSensorOptions {\n  activationConstraints?:\n    | ActivationConstraints\n    | ((\n        event: PointerEvent,\n        source: Draggable\n      ) => ActivationConstraints | undefined);\n  activatorElements?:\n    | Maybe<Element>[]\n    | ((source: Draggable) => Maybe<Element>[]);\n}\n\nconst defaults = Object.freeze<PointerSensorOptions>({\n  activationConstraints(event, source) {\n    const {pointerType, target} = event;\n\n    if (\n      pointerType === 'mouse' &&\n      isElement(target) &&\n      (source.handle === target || source.handle?.contains(target))\n    ) {\n      return undefined;\n    }\n\n    if (pointerType === 'touch') {\n      return {\n        delay: {value: 250, tolerance: 5},\n      };\n    }\n\n    if (isTextInput(target) && !event.defaultPrevented) {\n      return {\n        delay: {value: 200, tolerance: 0},\n      };\n    }\n\n    return {\n      delay: {value: 200, tolerance: 10},\n      distance: {value: 5},\n    };\n  },\n});\n\ntype LatestState = {\n  event: PointerEvent | undefined;\n  coordinates: Coordinates | undefined;\n};\n\n/**\n * The PointerSensor class is an input sensor that handles Pointer events,\n * such as mouse, touch and pen interactions.\n */\nexport class PointerSensor extends Sensor<\n  DragDropManager,\n  PointerSensorOptions\n> {\n  #cleanup: Set<CleanupFunction> = new Set();\n\n  #clearTimeout: CleanupFunction | undefined;\n\n  protected listeners = new Listeners();\n\n  protected initialCoordinates: Coordinates | undefined;\n\n  constructor(\n    public manager: DragDropManager,\n    public options?: PointerSensorOptions\n  ) {\n    super(manager);\n\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handlePointerUp = this.handlePointerUp.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  protected activationConstraints(event: PointerEvent, source: Draggable) {\n    const {activationConstraints = defaults.activationConstraints} =\n      this.options ?? {};\n\n    const constraints =\n      typeof activationConstraints === 'function'\n        ? activationConstraints(event, source)\n        : activationConstraints;\n\n    return constraints;\n  }\n\n  public bind(source: Draggable, options = this.options) {\n    const unbind = effect(() => {\n      const controller = new AbortController();\n      const {signal} = controller;\n      const listener: EventListener = (event: Event) => {\n        if (isPointerEvent(event)) {\n          this.handlePointerDown(event, source, options);\n        }\n      };\n      let targets = [source.handle ?? source.element];\n\n      if (options?.activatorElements) {\n        if (Array.isArray(options.activatorElements)) {\n          targets = options.activatorElements;\n        } else {\n          targets = options.activatorElements(source);\n        }\n      }\n\n      for (const target of targets) {\n        if (!target) continue;\n\n        patchWindow(target.ownerDocument.defaultView);\n        target.addEventListener('pointerdown', listener, {signal});\n      }\n\n      return () => controller.abort();\n    });\n\n    return unbind;\n  }\n\n  protected handlePointerDown(\n    event: PointerEvent,\n    source: Draggable,\n    options: PointerSensorOptions = {}\n  ) {\n    if (\n      this.disabled ||\n      !event.isPrimary ||\n      event.button !== 0 ||\n      !isElement(event.target) ||\n      source.disabled ||\n      isCapturedBySensor(event) ||\n      !this.manager.dragOperation.status.idle\n    ) {\n      return;\n    }\n\n    const {target} = event;\n    const isNativeDraggable =\n      isHTMLElement(target) &&\n      target.draggable &&\n      target.getAttribute('draggable') === 'true';\n\n    const offset = getFrameTransform(source.element);\n\n    this.initialCoordinates = {\n      x: event.clientX * offset.scaleX + offset.x,\n      y: event.clientY * offset.scaleY + offset.y,\n    };\n\n    const constraints = this.activationConstraints(event, source);\n\n    (event as any).sensor = this;\n\n    if (!constraints?.delay && !constraints?.distance) {\n      this.handleStart(source, event);\n    } else {\n      const {delay} = constraints;\n\n      if (delay) {\n        const timeout = setTimeout(\n          () => this.handleStart(source, event),\n          delay.value\n        );\n\n        this.#clearTimeout = () => {\n          clearTimeout(timeout);\n          this.#clearTimeout = undefined;\n        };\n      }\n    }\n\n    const ownerDocument = getDocument(event.target);\n\n    const unbindListeners = this.listeners.bind(ownerDocument, [\n      {\n        type: 'pointermove',\n        listener: (event: PointerEvent) =>\n          this.handlePointerMove(event, source),\n      },\n      {\n        type: 'pointerup',\n        listener: this.handlePointerUp,\n        options: {\n          capture: true,\n        },\n      },\n      {\n        // Cancel activation if there is a competing Drag and Drop interaction\n        type: 'dragstart',\n        listener: isNativeDraggable ? this.handleCancel : preventDefault,\n        options: {\n          capture: true,\n        },\n      },\n    ]);\n\n    const cleanup = () => {\n      unbindListeners();\n      this.#clearTimeout?.();\n      this.initialCoordinates = undefined;\n    };\n\n    this.#cleanup.add(cleanup);\n  }\n\n  private latest: LatestState = {\n    event: undefined,\n    coordinates: undefined,\n  };\n\n  protected handleMove = () => {\n    const {event, coordinates: to} = this.latest;\n\n    if (!event || !to) {\n      return;\n    }\n\n    this.manager.actions.move({event, to});\n  };\n\n  protected handlePointerMove(event: PointerEvent, source: Draggable) {\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n\n    const offset = getFrameTransform(source.element);\n\n    coordinates.x = coordinates.x * offset.scaleX + offset.x;\n    coordinates.y = coordinates.y * offset.scaleY + offset.y;\n\n    if (this.manager.dragOperation.status.dragging) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.latest.event = event;\n      this.latest.coordinates = coordinates;\n\n      scheduler.schedule(this.handleMove);\n      return;\n    }\n\n    if (!this.initialCoordinates) {\n      return;\n    }\n\n    const delta = {\n      x: coordinates.x - this.initialCoordinates.x,\n      y: coordinates.y - this.initialCoordinates.y,\n    };\n    const constraints = this.activationConstraints(event, source);\n    const {distance, delay} = constraints ?? {};\n\n    if (distance) {\n      if (\n        distance.tolerance != null &&\n        exceedsDistance(delta, distance.tolerance)\n      ) {\n        return this.handleCancel(event);\n      }\n      if (exceedsDistance(delta, distance.value)) {\n        return this.handleStart(source, event);\n      }\n    }\n\n    if (delay) {\n      if (exceedsDistance(delta, delay.tolerance)) {\n        return this.handleCancel(event);\n      }\n    }\n  }\n\n  private handlePointerUp(event: PointerEvent) {\n    // End the drag and drop operation\n    const {status} = this.manager.dragOperation;\n\n    if (!status.idle) {\n      // Prevent the default behaviour of the event\n      event.preventDefault();\n      event.stopPropagation();\n\n      const canceled = !status.initialized;\n      this.manager.actions.stop({event, canceled});\n    }\n\n    this.cleanup();\n  }\n\n  protected handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this.handleCancel(event);\n    }\n  }\n\n  protected handleStart(source: Draggable, event: PointerEvent) {\n    const {manager, initialCoordinates} = this;\n\n    this.#clearTimeout?.();\n\n    if (!initialCoordinates || !manager.dragOperation.status.idle) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const controller = manager.actions.start({\n      coordinates: initialCoordinates,\n      event,\n      source,\n    });\n\n    if (controller.signal.aborted) return this.cleanup();\n\n    event.preventDefault();\n\n    const ownerDocument = getDocument(event.target);\n    const pointerCaptureTarget = ownerDocument.body;\n\n    pointerCaptureTarget.setPointerCapture(event.pointerId);\n\n    const unbind = this.listeners.bind(ownerDocument, [\n      {\n        // Prevent scrolling on touch devices\n        type: 'touchmove',\n        listener: preventDefault,\n        options: {\n          passive: false,\n        },\n      },\n      {\n        // Prevent click events\n        type: 'click',\n        listener: preventDefault,\n      },\n      {\n        type: 'contextmenu',\n        listener: preventDefault,\n      },\n      {\n        type: 'keydown',\n        listener: this.handleKeyDown,\n      },\n      {\n        type: 'lostpointercapture',\n        listener: (event: PointerEvent) => {\n          if (event.target !== pointerCaptureTarget) return;\n\n          this.handlePointerUp(event);\n        },\n      },\n    ]);\n\n    this.#cleanup.add(unbind);\n  }\n\n  protected handleCancel(event: Event) {\n    const {dragOperation} = this.manager;\n\n    if (dragOperation.status.initialized) {\n      this.manager.actions.stop({event, canceled: true});\n    }\n\n    this.cleanup();\n  }\n\n  protected cleanup() {\n    this.latest = {\n      event: undefined,\n      coordinates: undefined,\n    };\n    this.#cleanup.forEach((cleanup) => cleanup());\n    this.#cleanup.clear();\n  }\n\n  public destroy() {\n    this.cleanup();\n    this.listeners.clear();\n  }\n\n  static configure = configurator(PointerSensor);\n\n  static defaults = defaults;\n}\n\nfunction isCapturedBySensor(event: Event) {\n  return 'sensor' in event;\n}\n\nfunction preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nfunction noop() {}\n\nconst windows = new WeakSet<Window>();\n\nfunction patchWindow(window: Window | null) {\n  if (!window || windows.has(window)) {\n    return;\n  }\n\n  window.addEventListener('touchmove', noop, {\n    capture: false,\n    passive: false,\n  });\n  windows.add(window);\n}\n","import {\n  DragDropManager as AbstractDragDropManager,\n  DragDropManagerInput,\n  type Data,\n  type Modifiers,\n  type Plugins,\n  type Sensors,\n} from '@dnd-kit/abstract';\n\nimport type {Draggable, Droppable} from '../entities/index.ts';\nimport {\n  Accessibility,\n  AutoScroller,\n  Cursor,\n  Feedback,\n  Scroller,\n  ScrollListener,\n  PreventSelection,\n} from '../plugins/index.ts';\nimport {KeyboardSensor, PointerSensor} from '../sensors/index.ts';\n\nexport interface Input extends DragDropManagerInput<DragDropManager> {}\n\nexport const defaultPreset: {\n  modifiers: Modifiers<DragDropManager>;\n  plugins: Plugins<DragDropManager>;\n  sensors: Sensors<DragDropManager>;\n} = {\n  modifiers: [],\n  plugins: [Accessibility, AutoScroller, Cursor, Feedback, PreventSelection],\n  sensors: [PointerSensor, KeyboardSensor],\n};\n\nexport class DragDropManager<\n  T extends Data = Data,\n  U extends Draggable<T> = Draggable<T>,\n  V extends Droppable<T> = Droppable<T>,\n> extends AbstractDragDropManager<U, V> {\n  constructor(input: Input = {}) {\n    const {\n      plugins = defaultPreset.plugins,\n      sensors = defaultPreset.sensors,\n      modifiers = [],\n    } = input;\n\n    super({\n      ...input,\n      plugins: [ScrollListener, Scroller, ...plugins],\n      sensors,\n      modifiers,\n    });\n  }\n}\n","import {\n  Draggable as AbstractDraggable,\n  Sensor,\n  descriptor,\n} from '@dnd-kit/abstract';\nimport type {Data, DraggableInput} from '@dnd-kit/abstract';\nimport {reactive} from '@dnd-kit/state';\n\nimport type {DragDropManager} from '../../manager/index.ts';\nimport type {Sensors} from '../../sensors/index.ts';\n\nexport type FeedbackType = 'default' | 'move' | 'clone' | 'none';\n\nexport interface Input<T extends Data = Data> extends DraggableInput<T> {\n  handle?: Element;\n  element?: Element;\n  feedback?: FeedbackType;\n  sensors?: Sensors;\n}\n\nexport class Draggable<T extends Data = Data> extends AbstractDraggable<\n  T,\n  DragDropManager\n> {\n  constructor(\n    {\n      element,\n      effects = () => [],\n      handle,\n      feedback = 'default',\n      ...input\n    }: Input<T>,\n    manager: DragDropManager | undefined\n  ) {\n    super(\n      {\n        effects: () => [\n          ...effects(),\n          () => {\n            const {manager} = this;\n\n            if (!manager) return;\n\n            const sensors = this.sensors?.map(descriptor) ?? [\n              ...manager.sensors,\n            ];\n            const unbindFunctions = sensors.map((entry) => {\n              const sensorInstance =\n                entry instanceof Sensor\n                  ? entry\n                  : manager.registry.register(entry.plugin);\n              const options =\n                entry instanceof Sensor ? undefined : entry.options;\n\n              const unbind = sensorInstance.bind(this, options);\n              return unbind;\n            });\n\n            return function cleanup() {\n              unbindFunctions.forEach((unbind) => unbind());\n            };\n          },\n        ],\n        ...input,\n      },\n      manager\n    );\n\n    this.element = element;\n    this.handle = handle;\n    this.feedback = feedback;\n  }\n\n  @reactive\n  public accessor handle: Element | undefined;\n\n  @reactive\n  public accessor element: Element | undefined;\n\n  @reactive\n  public accessor feedback: FeedbackType;\n}\n","import {Droppable as AbstractDroppable} from '@dnd-kit/abstract';\nimport type {\n  Data,\n  DroppableInput as AbstractDroppableInput,\n} from '@dnd-kit/abstract';\nimport {defaultCollisionDetection} from '@dnd-kit/collision';\nimport type {CollisionDetector} from '@dnd-kit/collision';\nimport {reactive, signal, untracked} from '@dnd-kit/state';\nimport type {BoundingRectangle, Shape} from '@dnd-kit/geometry';\nimport {DOMRectangle, PositionObserver} from '@dnd-kit/dom/utilities';\n\nimport type {DragDropManager} from '../../manager/manager.ts';\n\ntype OptionalInput = 'collisionDetector';\n\nexport interface Input<T extends Data = Data>\n  extends Omit<AbstractDroppableInput<T>, OptionalInput> {\n  collisionDetector?: CollisionDetector;\n  element?: Element;\n}\n\nexport class Droppable<T extends Data = Data> extends AbstractDroppable<\n  T,\n  DragDropManager\n> {\n  constructor(\n    {element, effects = () => [], ...input}: Input<T>,\n    manager: DragDropManager | undefined\n  ) {\n    const {collisionDetector = defaultCollisionDetection} = input;\n    const updateShape = (boundingClientRect?: BoundingRectangle | null) => {\n      const {manager, element} = this;\n\n      if (!element || boundingClientRect === null) {\n        this.shape = undefined;\n        return undefined;\n      }\n\n      if (!manager) return;\n\n      const updatedShape = new DOMRectangle(element);\n\n      const shape = untracked(() => this.shape);\n      if (updatedShape && shape?.equals(updatedShape)) {\n        return shape;\n      }\n\n      this.shape = updatedShape;\n\n      return updatedShape;\n    };\n\n    const observePosition = signal(false);\n\n    super(\n      {\n        ...input,\n        collisionDetector,\n        effects: () => [\n          ...effects(),\n          () => {\n            const {element, manager} = this;\n            if (!manager) return;\n\n            const {dragOperation} = manager;\n            const {source} = dragOperation;\n\n            observePosition.value = Boolean(\n              source &&\n                dragOperation.status.initialized &&\n                element &&\n                !this.disabled &&\n                this.accepts(source)\n            );\n          },\n          () => {\n            const {element} = this;\n\n            if (observePosition.value && element) {\n              const positionObserver = new PositionObserver(\n                element,\n                updateShape\n              );\n\n              return () => {\n                positionObserver.disconnect();\n                this.shape = undefined;\n              };\n            }\n          },\n          () => {\n            if (this.manager?.dragOperation.status.initialized) {\n              return () => {\n                this.shape = undefined;\n              };\n            }\n          },\n        ],\n      },\n      manager\n    );\n\n    this.element = element;\n    this.refreshShape = () => updateShape();\n  }\n\n  @reactive\n  accessor #element: Element | undefined;\n\n  @reactive\n  public accessor proxy: Element | undefined;\n\n  set element(element: Element | undefined) {\n    this.#element = element;\n  }\n\n  get element() {\n    return this.proxy ?? this.#element;\n  }\n\n  public refreshShape: () => Shape | undefined;\n}\n"],"names":["manager","_a","Plugin","document","generateUniqueId","_b","_c","untracked","tX","tY","showPopover","styles","element","transform","status","initialTranslate","translate","delta","options","getDocument","_dec","_init","reactive","Direction","effect","Axes","scheduler","computed","isKeyboardEvent","ScrollDirection","canScroll","CorePlugin","isElement","DOMRectangle","event","configurator","defaults","Sensor","Listeners","signal","isHTMLElement","getFrameTransform","AbstractDragDropManager","AbstractDraggable","effects","_element_dec","_element","AbstractDroppable"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3437, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@dnd-kit+dom@0.1.21/node_modules/@dnd-kit/dom/sortable.js","sources":["file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/sortable/utilities.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/sortable/plugins/SortableKeyboardPlugin.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/helpers/dist/index.js","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/sortable/plugins/OptimisticSortingPlugin.ts","file:///C:/Users/Abrar/Documents/Projects/real-estate-website-builder/node_modules/.pnpm/%40dnd-kit%2Bdom%400.1.21/node_modules/%40dnd-kit/dom/src/sortable/sortable.ts"],"sourcesContent":["import type {Droppable, Draggable} from '@dnd-kit/dom';\n\nimport {SortableDroppable, SortableDraggable} from './sortable.ts';\n\nexport function isSortable(\n  element: Draggable | Droppable | null\n): element is SortableDroppable<any> | SortableDraggable<any> {\n  return (\n    element instanceof SortableDroppable || element instanceof SortableDraggable\n  );\n}\n","import {batch, CleanupFunction, effect} from '@dnd-kit/state';\nimport {Plugin} from '@dnd-kit/abstract';\nimport {closestCorners} from '@dnd-kit/collision';\nimport {\n  DOMRectangle,\n  getVisibleBoundingRectangle,\n  isKeyboardEvent,\n  scrollIntoViewIfNeeded,\n} from '@dnd-kit/dom/utilities';\nimport {Rectangle, type Coordinates} from '@dnd-kit/geometry';\nimport {Scroller} from '@dnd-kit/dom';\nimport type {DragDropManager, Droppable} from '@dnd-kit/dom';\n\nimport {isSortable} from '../utilities.ts';\n\nconst TOLERANCE = 10;\n\nexport class SortableKeyboardPlugin extends Plugin<DragDropManager> {\n  constructor(manager: DragDropManager) {\n    super(manager);\n\n    const cleanupEffect = effect(() => {\n      const {dragOperation} = manager;\n\n      if (!isKeyboardEvent(dragOperation.activatorEvent)) {\n        return;\n      }\n\n      if (!isSortable(dragOperation.source)) {\n        return;\n      }\n\n      if (dragOperation.status.initialized) {\n        const scroller = manager.registry.plugins.get(Scroller);\n\n        if (scroller) {\n          scroller.disable();\n\n          return () => scroller.enable();\n        }\n      }\n    });\n\n    const unsubscribe = manager.monitor.addEventListener(\n      'dragmove',\n      (event, manager: DragDropManager) => {\n        queueMicrotask(() => {\n          if (this.disabled || event.defaultPrevented || !event.nativeEvent) {\n            return;\n          }\n\n          const {dragOperation} = manager;\n\n          if (!isKeyboardEvent(event.nativeEvent)) {\n            return;\n          }\n\n          if (!isSortable(dragOperation.source)) {\n            return;\n          }\n\n          if (!dragOperation.shape) {\n            return;\n          }\n\n          const {actions, collisionObserver, registry} = manager;\n          const {by} = event;\n\n          if (!by) {\n            return;\n          }\n\n          const direction = getDirection(by);\n          const {source, target} = dragOperation;\n          const {center} = dragOperation.shape.current;\n          const potentialTargets: Droppable[] = [];\n          const cleanup: CleanupFunction[] = [];\n\n          batch(() => {\n            for (const droppable of registry.droppables) {\n              const {id} = droppable;\n\n              if (\n                !droppable.accepts(source) ||\n                (id === target?.id && isSortable(droppable)) ||\n                !droppable.element\n              ) {\n                continue;\n              }\n\n              let previousShape = droppable.shape;\n              const shape = new DOMRectangle(droppable.element, {\n                getBoundingClientRect: (element) =>\n                  getVisibleBoundingRectangle(element, undefined, 0.2),\n              });\n\n              if (!shape.height || !shape.width) continue;\n\n              if (\n                (direction == 'down' &&\n                  center.y + TOLERANCE < shape.center.y) ||\n                (direction == 'up' && center.y - TOLERANCE > shape.center.y) ||\n                (direction == 'left' &&\n                  center.x - TOLERANCE > shape.center.x) ||\n                (direction == 'right' && center.x + TOLERANCE < shape.center.x)\n              ) {\n                potentialTargets.push(droppable);\n                droppable.shape = shape;\n                cleanup.push(() => (droppable.shape = previousShape));\n              }\n            }\n          });\n\n          event.preventDefault();\n          collisionObserver.disable();\n\n          const collisions = collisionObserver.computeCollisions(\n            potentialTargets,\n            closestCorners\n          );\n          batch(() => cleanup.forEach((clean) => clean()));\n\n          const [firstCollision] = collisions;\n\n          if (!firstCollision) {\n            return;\n          }\n\n          const {id} = firstCollision;\n          const {index, group} = source.sortable;\n\n          actions.setDropTarget(id).then(() => {\n            // Wait until optimistic sorting has a chance to update the DOM\n            const {source, target, shape} = dragOperation;\n\n            if (!source || !isSortable(source) || !shape) {\n              return;\n            }\n\n            const {\n              index: newIndex,\n              group: newGroup,\n              target: targetElement,\n            } = source.sortable;\n            const updated = index !== newIndex || group !== newGroup;\n\n            const element = updated ? targetElement : target?.element;\n\n            if (!element) return;\n\n            scrollIntoViewIfNeeded(element);\n            const updatedShape = new DOMRectangle(element);\n\n            if (!updatedShape) {\n              return;\n            }\n\n            const delta = Rectangle.delta(\n              updatedShape,\n              Rectangle.from(shape.current.boundingRectangle),\n              source.alignment\n            );\n\n            actions.move({\n              by: delta,\n            });\n\n            if (updated) {\n              actions\n                .setDropTarget(source.id)\n                .then(() => collisionObserver.enable());\n            } else {\n              collisionObserver.enable();\n            }\n          });\n        });\n      }\n    );\n\n    this.destroy = () => {\n      unsubscribe();\n      cleanupEffect();\n    };\n  }\n}\n\nfunction getDirection(delta: Coordinates) {\n  const {x, y} = delta;\n\n  if (x > 0) {\n    return 'right';\n  } else if (x < 0) {\n    return 'left';\n  } else if (y > 0) {\n    return 'down';\n  } else if (y < 0) {\n    return 'up';\n  }\n}\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/move.ts\nfunction arrayMove(array, from, to) {\n  if (from === to) {\n    return array;\n  }\n  const newArray = array.slice();\n  newArray.splice(to, 0, newArray.splice(from, 1)[0]);\n  return newArray;\n}\nfunction arraySwap(array, from, to) {\n  if (from === to) {\n    return array;\n  }\n  const newArray = array.slice();\n  const item = newArray[from];\n  newArray[from] = newArray[to];\n  newArray[to] = item;\n  return newArray;\n}\nfunction mutate(items, event, mutation) {\n  var _a, _b;\n  const { source, target, canceled } = event.operation;\n  if (!source || !target || canceled) {\n    if (\"preventDefault\" in event) event.preventDefault();\n    return items;\n  }\n  const findIndex = (item, id) => item === id || typeof item === \"object\" && \"id\" in item && item.id === id;\n  if (Array.isArray(items)) {\n    const sourceIndex2 = items.findIndex((item) => findIndex(item, source.id));\n    const targetIndex2 = items.findIndex((item) => findIndex(item, target.id));\n    if (sourceIndex2 === -1 || targetIndex2 === -1) {\n      return items;\n    }\n    if (!canceled && \"index\" in source && typeof source.index === \"number\") {\n      const projectedSourceIndex = source.index;\n      if (projectedSourceIndex !== sourceIndex2) {\n        return mutation(items, sourceIndex2, projectedSourceIndex);\n      }\n    }\n    return mutation(items, sourceIndex2, targetIndex2);\n  }\n  const entries = Object.entries(items);\n  let sourceIndex = -1;\n  let sourceParent;\n  let targetIndex = -1;\n  let targetParent;\n  for (const [id, children] of entries) {\n    if (sourceIndex === -1) {\n      sourceIndex = children.findIndex((item) => findIndex(item, source.id));\n      if (sourceIndex !== -1) {\n        sourceParent = id;\n      }\n    }\n    if (targetIndex === -1) {\n      targetIndex = children.findIndex((item) => findIndex(item, target.id));\n      if (targetIndex !== -1) {\n        targetParent = id;\n      }\n    }\n    if (sourceIndex !== -1 && targetIndex !== -1) {\n      break;\n    }\n  }\n  if (!source.manager) return items;\n  const { dragOperation } = source.manager;\n  const position = (_b = (_a = dragOperation.shape) == null ? void 0 : _a.current.center) != null ? _b : dragOperation.position.current;\n  if (targetParent == null) {\n    if (target.id in items) {\n      const insertionIndex = target.shape && position.y > target.shape.center.y ? items[target.id].length : 0;\n      targetParent = target.id;\n      targetIndex = insertionIndex;\n    }\n  }\n  if (sourceParent == null || targetParent == null || sourceParent === targetParent && sourceIndex === targetIndex) {\n    if (\"preventDefault\" in event) event.preventDefault();\n    return items;\n  }\n  if (sourceParent === targetParent) {\n    return __spreadProps(__spreadValues({}, items), {\n      [sourceParent]: mutation(items[sourceParent], sourceIndex, targetIndex)\n    });\n  }\n  const isBelowTarget = target.shape && Math.round(position.y) > Math.round(target.shape.center.y);\n  const modifier = isBelowTarget ? 1 : 0;\n  const sourceItem = items[sourceParent][sourceIndex];\n  return __spreadProps(__spreadValues({}, items), {\n    [sourceParent]: [\n      ...items[sourceParent].slice(0, sourceIndex),\n      ...items[sourceParent].slice(sourceIndex + 1)\n    ],\n    [targetParent]: [\n      ...items[targetParent].slice(0, targetIndex + modifier),\n      sourceItem,\n      ...items[targetParent].slice(targetIndex + modifier)\n    ]\n  });\n}\nfunction move(items, event) {\n  return mutate(items, event, arrayMove);\n}\nfunction swap(items, event) {\n  return mutate(items, event, arraySwap);\n}\nexport {\n  arrayMove,\n  arraySwap,\n  move,\n  swap\n};\n","import {Plugin, type UniqueIdentifier} from '@dnd-kit/abstract';\nimport type {DragDropManager} from '@dnd-kit/dom';\nimport {move} from '@dnd-kit/helpers';\nimport {batch} from '@dnd-kit/state';\n\nimport {Sortable, SortableDroppable} from '../sortable.ts';\nimport {isSortable} from '../utilities.ts';\n\nconst defaultGroup = '__default__';\n\nexport class OptimisticSortingPlugin extends Plugin<DragDropManager> {\n  constructor(manager: DragDropManager) {\n    super(manager);\n\n    const getSortableInstances = () => {\n      const sortableInstances = new Map<\n        UniqueIdentifier | undefined,\n        Set<Sortable>\n      >();\n\n      for (const droppable of manager.registry.droppables) {\n        if (droppable instanceof SortableDroppable) {\n          const {sortable} = droppable;\n          const {group} = sortable;\n\n          let instances = sortableInstances.get(group);\n\n          if (!instances) {\n            instances = new Set();\n            sortableInstances.set(group, instances);\n          }\n\n          instances.add(sortable);\n        }\n      }\n\n      for (const [group, instances] of sortableInstances) {\n        sortableInstances.set(group, new Set(sort(instances)));\n      }\n\n      return sortableInstances;\n    };\n\n    const unsubscribe = [\n      manager.monitor.addEventListener('dragover', (event, manager) => {\n        if (this.disabled) {\n          return;\n        }\n\n        const {dragOperation} = manager;\n        const {source, target} = dragOperation;\n\n        if (!isSortable(source) || !isSortable(target)) {\n          return;\n        }\n\n        if (source.sortable === target.sortable) {\n          return;\n        }\n\n        const instances = getSortableInstances();\n        const sameGroup = source.sortable.group === target.sortable.group;\n        const sourceInstances = instances.get(source.sortable.group);\n        const targetInstances = sameGroup\n          ? sourceInstances\n          : instances.get(target.sortable.group);\n\n        if (!sourceInstances || !targetInstances) return;\n\n        queueMicrotask(() => {\n          if (event.defaultPrevented) return;\n\n          // Wait for the renderer to handle the event before attempting to optimistically update\n          manager.renderer.rendering.then(() => {\n            const newInstances = getSortableInstances();\n\n            for (const [group, sortableInstances] of instances.entries()) {\n              const entries = Array.from(sortableInstances).entries();\n\n              for (const [index, sortable] of entries) {\n                if (\n                  sortable.index !== index ||\n                  sortable.group !== group ||\n                  !newInstances.get(group)?.has(sortable)\n                ) {\n                  // At least one index or group was changed so we should abort optimistic updates\n                  return;\n                }\n              }\n            }\n\n            const sourceElement = source.sortable.element;\n            const targetElement = target.sortable.element;\n\n            if (!targetElement || !sourceElement) {\n              return;\n            }\n\n            if (!sameGroup && target.id === source.sortable.group) {\n              return;\n            }\n\n            const orderedSourceSortables = sort(sourceInstances);\n            const orderedTargetSortables = sameGroup\n              ? orderedSourceSortables\n              : sort(targetInstances);\n            const sourceGroup = source.sortable.group ?? defaultGroup;\n            const targetGroup = target.sortable.group ?? defaultGroup;\n            const state = {\n              [sourceGroup]: orderedSourceSortables,\n              [targetGroup]: orderedTargetSortables,\n            };\n            const newState = move(state, event);\n\n            if (state === newState) return;\n\n            const sourceIndex = newState[targetGroup].indexOf(source.sortable);\n            const targetIndex = newState[targetGroup].indexOf(target.sortable);\n\n            manager.collisionObserver.disable();\n\n            reorder(sourceElement, sourceIndex, targetElement, targetIndex);\n\n            batch(() => {\n              for (const [index, sortable] of newState[sourceGroup].entries()) {\n                sortable.index = index;\n              }\n\n              if (!sameGroup) {\n                for (const [index, sortable] of newState[\n                  targetGroup\n                ].entries()) {\n                  sortable.group = target.sortable.group;\n                  sortable.index = index;\n                }\n              }\n            });\n\n            manager.actions\n              .setDropTarget(source.id)\n              .then(() => manager.collisionObserver.enable());\n          });\n        });\n      }),\n      manager.monitor.addEventListener('dragend', (event, manager) => {\n        if (!event.canceled) {\n          return;\n        }\n\n        const {dragOperation} = manager;\n        const {source} = dragOperation;\n\n        if (!isSortable(source)) {\n          return;\n        }\n\n        if (\n          source.sortable.initialIndex === source.sortable.index &&\n          source.sortable.initialGroup === source.sortable.group\n        ) {\n          return;\n        }\n\n        queueMicrotask(() => {\n          const instances = getSortableInstances();\n          const initialGroupInstances = instances.get(\n            source.sortable.initialGroup\n          );\n\n          if (!initialGroupInstances) return;\n\n          // Wait for the renderer to handle the event before attempting to optimistically update\n          manager.renderer.rendering.then(() => {\n            for (const [group, sortableInstances] of instances.entries()) {\n              const entries = Array.from(sortableInstances).entries();\n\n              for (const [index, sortable] of entries) {\n                if (sortable.index !== index || sortable.group !== group) {\n                  // At least one index or group was changed so we should abort optimistic updates\n                  return;\n                }\n              }\n            }\n\n            const initialGroup = sort(initialGroupInstances);\n            const sourceElement = source.sortable.element;\n            const target = initialGroup[source.sortable.initialIndex];\n            const targetElement = target?.element;\n\n            if (!target || !targetElement || !sourceElement) {\n              return;\n            }\n\n            reorder(sourceElement, target.index, targetElement, source.index);\n\n            batch(() => {\n              for (const [_, sortableInstances] of instances.entries()) {\n                const entries = Array.from(sortableInstances).values();\n\n                for (const sortable of entries) {\n                  sortable.index = sortable.initialIndex;\n                  sortable.group = sortable.initialGroup;\n                }\n              }\n            });\n          });\n        });\n      }),\n    ];\n\n    this.destroy = () => {\n      for (const unsubscribeListener of unsubscribe) {\n        unsubscribeListener();\n      }\n    };\n  }\n}\n\nfunction reorder(\n  sourceElement: Element,\n  sourceIndex: number,\n  targetElement: Element,\n  targetIndex: number\n) {\n  const position = targetIndex < sourceIndex ? 'afterend' : 'beforebegin';\n\n  targetElement.insertAdjacentElement(position, sourceElement);\n}\n\nfunction sortByIndex(a: Sortable, b: Sortable) {\n  return a.index - b.index;\n}\n\nfunction sort(instances: Set<Sortable>) {\n  return Array.from(instances).sort(sortByIndex);\n}\n","import {batch, reactive, untracked, WeakStore} from '@dnd-kit/state';\nimport type {CollisionPriority, Modifiers} from '@dnd-kit/abstract';\nimport type {\n  Data,\n  PluginConstructor,\n  Type,\n  UniqueIdentifier,\n} from '@dnd-kit/abstract';\nimport {\n  defaultCollisionDetection,\n  type CollisionDetector,\n} from '@dnd-kit/collision';\nimport type {Alignment} from '@dnd-kit/geometry';\nimport {Draggable, Droppable} from '@dnd-kit/dom';\nimport type {\n  DraggableInput,\n  FeedbackType,\n  DroppableInput,\n  Sensors,\n  DragDropManager,\n} from '@dnd-kit/dom';\nimport {\n  animateTransform,\n  getComputedStyles,\n  computeTranslate,\n  ProxiedElements,\n} from '@dnd-kit/dom/utilities';\n\nimport {SortableKeyboardPlugin} from './plugins/SortableKeyboardPlugin.ts';\nimport {OptimisticSortingPlugin} from './plugins/OptimisticSortingPlugin.ts';\n\nexport interface SortableTransition {\n  /**\n   * The duration of the transition in milliseconds.\n   * @default 300\n   */\n  duration?: number;\n  /**\n   * The easing function to use for the transition.\n   * @default 'cubic-bezier(0.25, 1, 0.5, 1)'\n   */\n  easing?: string;\n  /**\n   * Whether the sortable item should transition when its index changes,\n   * but there is no drag operation in progress.\n   * @default false\n   **/\n  idle?: boolean;\n}\n\nconst defaultPlugins: PluginConstructor[] = [\n  SortableKeyboardPlugin,\n  OptimisticSortingPlugin,\n];\n\nexport interface SortableInput<T extends Data>\n  extends DraggableInput<T>,\n    DroppableInput<T> {\n  /**\n   * The index of the sortable item within its group.\n   */\n  index: number;\n\n  /**\n   * The element that should be used as the droppable target for this sortable item.\n   */\n  target?: Element;\n\n  /**\n   * The optional unique identifier of the group that the sortable item belongs to.\n   */\n  group?: UniqueIdentifier;\n  /**\n   * The transition configuration to use when the index of the sortable item changes.\n   */\n  transition?: SortableTransition | null;\n  /**\n   * Plugins to register when sortable item is instantiated.\n   * @default [SortableKeyboardPlugin, OptimisticSortingPlugin]\n   */\n  plugins?: PluginConstructor[];\n}\n\nexport const defaultSortableTransition: SortableTransition = {\n  duration: 250,\n  easing: 'cubic-bezier(0.25, 1, 0.5, 1)',\n  idle: false,\n};\n\ninterface TemporaryState {\n  initialIndex: number;\n  initialGroup: UniqueIdentifier | undefined;\n}\n\nconst store = new WeakStore<\n  DragDropManager,\n  UniqueIdentifier,\n  TemporaryState\n>();\n\nexport class Sortable<T extends Data = Data> {\n  public draggable: Draggable<T>;\n  public droppable: Droppable<T>;\n\n  @reactive\n  public accessor index: number;\n\n  #previousGroup: UniqueIdentifier | undefined;\n\n  #previousIndex: number;\n\n  get initialIndex() {\n    return store.get(this.manager, this.id)?.initialIndex ?? this.index;\n  }\n\n  get initialGroup() {\n    return store.get(this.manager, this.id)?.initialGroup ?? this.group;\n  }\n\n  @reactive\n  public accessor group: UniqueIdentifier | undefined;\n\n  transition: SortableTransition | null;\n\n  constructor(\n    {\n      effects: inputEffects = () => [],\n      group,\n      index,\n      sensors,\n      type,\n      transition = defaultSortableTransition,\n      plugins = defaultPlugins,\n      ...input\n    }: SortableInput<T>,\n    manager: DragDropManager<any, any> | undefined\n  ) {\n    this.droppable = new SortableDroppable<T>(input, manager, this);\n    this.draggable = new SortableDraggable<T>(\n      {\n        ...input,\n        effects: () => [\n          () => {\n            const status = this.manager?.dragOperation.status;\n\n            if (\n              status?.initializing &&\n              this.id === this.manager?.dragOperation.source?.id\n            ) {\n              store.clear(this.manager);\n            }\n\n            if (status?.dragging) {\n              store.set(\n                this.manager,\n                this.id,\n                untracked(() => ({\n                  initialIndex: this.index,\n                  initialGroup: this.group,\n                }))\n              );\n            }\n          },\n          () => {\n            const {index, group, manager: _} = this;\n            const previousIndex = this.#previousIndex;\n            const previousGroup = this.#previousGroup;\n\n            // Re-run this effect whenever the index changes\n            if (index !== previousIndex || group !== previousGroup) {\n              this.#previousIndex = index;\n              this.#previousGroup = group;\n\n              this.animate();\n            }\n          },\n          () => {\n            const {target} = this;\n            const {feedback, isDragSource} = this.draggable;\n\n            if (feedback == 'move' && isDragSource) {\n              this.droppable.disabled = !target;\n            }\n          },\n          () => {\n            const {manager} = this;\n\n            for (const plugin of plugins) {\n              manager?.registry.register(plugin);\n            }\n          },\n          ...inputEffects(),\n        ],\n        type,\n        sensors,\n      },\n      manager,\n      this\n    );\n\n    this.#element = input.element;\n    this.manager = manager;\n    this.index = index;\n    this.#previousIndex = index;\n    this.group = group;\n    this.#previousGroup = group;\n    this.type = type;\n    this.transition = transition;\n  }\n\n  protected animate() {\n    untracked(() => {\n      const {manager, transition} = this;\n      const {shape} = this.droppable;\n\n      if (!manager) return;\n\n      const {idle} = manager.dragOperation.status;\n\n      if (!shape || !transition || (idle && !transition.idle)) {\n        return;\n      }\n\n      manager.renderer.rendering.then(() => {\n        const {element} = this;\n\n        if (!element) {\n          return;\n        }\n\n        const updatedShape = this.refreshShape();\n\n        if (!updatedShape) {\n          return;\n        }\n\n        const delta = {\n          x: shape.boundingRectangle.left - updatedShape.boundingRectangle.left,\n          y: shape.boundingRectangle.top - updatedShape.boundingRectangle.top,\n        };\n\n        const {translate} = getComputedStyles(element);\n        const currentTranslate = computeTranslate(element, translate, false);\n        const finalTranslate = computeTranslate(element, translate);\n\n        if (delta.x || delta.y) {\n          animateTransform({\n            element,\n            keyframes: {\n              translate: [\n                `${currentTranslate.x + delta.x}px ${currentTranslate.y + delta.y}px ${currentTranslate.z}`,\n                `${finalTranslate.x}px ${finalTranslate.y}px ${finalTranslate.z}`,\n              ],\n            },\n            options: transition,\n          }).then(() => {\n            if (!manager.dragOperation.status.dragging) {\n              this.droppable.shape = undefined;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  public get manager(): DragDropManager<any, any> | undefined {\n    return this.draggable.manager as any;\n  }\n\n  public set manager(manager: DragDropManager<any, any> | undefined) {\n    batch(() => {\n      this.draggable.manager = manager as any;\n      this.droppable.manager = manager as any;\n    });\n  }\n\n  #element: Element | undefined;\n\n  public set element(element: Element | undefined) {\n    batch(() => {\n      const previousElement = this.#element;\n      const droppableElement = this.droppable.element;\n      const draggableElement = this.draggable.element;\n\n      if (!droppableElement || droppableElement === previousElement) {\n        this.droppable.element = element;\n      }\n\n      if (!draggableElement || draggableElement === previousElement) {\n        this.draggable.element = element;\n      }\n\n      this.#element = element;\n    });\n  }\n\n  public get element() {\n    const element = this.#element;\n\n    if (!element) return;\n\n    return ProxiedElements.get(element) ?? element ?? this.droppable.element;\n  }\n\n  public set target(target: Element | undefined) {\n    this.droppable.element = target;\n  }\n\n  public get target() {\n    return this.droppable.element;\n  }\n\n  public set source(source: Element | undefined) {\n    this.draggable.element = source;\n  }\n\n  public get source() {\n    return this.draggable.element;\n  }\n\n  public get disabled() {\n    return this.draggable.disabled && this.droppable.disabled;\n  }\n\n  public set feedback(value: FeedbackType) {\n    this.draggable.feedback = value;\n  }\n\n  public set disabled(value: boolean) {\n    batch(() => {\n      this.droppable.disabled = value;\n      this.draggable.disabled = value;\n    });\n  }\n\n  public set data(data: T) {\n    batch(() => {\n      this.droppable.data = data;\n      this.draggable.data = data;\n    });\n  }\n\n  public set handle(handle: Element | undefined) {\n    this.draggable.handle = handle;\n  }\n\n  public set id(id: UniqueIdentifier) {\n    batch(() => {\n      this.droppable.id = id;\n      this.draggable.id = id;\n    });\n  }\n\n  public get id() {\n    return this.droppable.id;\n  }\n\n  public set sensors(value: Sensors | undefined) {\n    this.draggable.sensors = value;\n  }\n\n  public set modifiers(value: Modifiers | undefined) {\n    this.draggable.modifiers = value;\n  }\n\n  public set collisionPriority(value: CollisionPriority | number | undefined) {\n    this.droppable.collisionPriority = value;\n  }\n\n  public set collisionDetector(value: CollisionDetector | undefined) {\n    this.droppable.collisionDetector = value ?? defaultCollisionDetection;\n  }\n\n  public set alignment(value: Alignment | undefined) {\n    this.draggable.alignment = value;\n  }\n\n  public get alignment() {\n    return this.draggable.alignment;\n  }\n\n  public set type(type: Type | undefined) {\n    batch(() => {\n      this.droppable.type = type;\n      this.draggable.type = type;\n    });\n  }\n\n  public get type() {\n    return this.draggable.type;\n  }\n\n  public set accept(value: Droppable['accept']) {\n    this.droppable.accept = value;\n  }\n\n  public get accept() {\n    return this.droppable.accept;\n  }\n\n  public get isDropTarget() {\n    return this.droppable.isDropTarget;\n  }\n\n  /**\n   * A boolean indicating whether the sortable item is the source of a drag operation.\n   */\n  public get isDragSource() {\n    return this.draggable.isDragSource;\n  }\n\n  /**\n   * A boolean indicating whether the sortable item is being dragged.\n   */\n  public get isDragging() {\n    return this.draggable.isDragging;\n  }\n\n  /**\n   * A boolean indicating whether the sortable item is being dropped.\n   */\n  public get isDropping() {\n    return this.draggable.isDropping;\n  }\n\n  public get status() {\n    return this.draggable.status;\n  }\n\n  public refreshShape() {\n    return this.droppable.refreshShape();\n  }\n\n  public accepts(draggable: Draggable): boolean {\n    return this.droppable.accepts(draggable);\n  }\n\n  public register = () => {\n    batch(() => {\n      this.manager?.registry.register(this.droppable);\n      this.manager?.registry.register(this.draggable);\n    });\n\n    return () => this.unregister();\n  };\n\n  public unregister = () => {\n    batch(() => {\n      this.manager?.registry.unregister(this.droppable);\n      this.manager?.registry.unregister(this.draggable);\n    });\n  };\n\n  public destroy = () => {\n    batch(() => {\n      this.droppable.destroy();\n      this.draggable.destroy();\n    });\n  };\n}\n\nexport class SortableDraggable<T extends Data> extends Draggable<T> {\n  constructor(\n    input: DraggableInput<T>,\n    manager: DragDropManager | undefined,\n    public sortable: Sortable<T>\n  ) {\n    super(input, manager);\n  }\n\n  get index() {\n    return this.sortable.index;\n  }\n}\n\nexport class SortableDroppable<T extends Data> extends Droppable<T> {\n  constructor(\n    input: DraggableInput<T>,\n    manager: DragDropManager | undefined,\n    public sortable: Sortable<T>\n  ) {\n    super(input, manager);\n  }\n}\n"],"names":["manager","id","source","target","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","Plugin","batch","Sortable","_a","_b","index","group"],"mappings":"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","debugId":null}}]
}